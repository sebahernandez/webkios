{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport { BaseModal } from \"react-spring-modal\";\nimport { CloseIcon } from \"assets/icons/CloseIcon\";\nimport { Scrollbar } from \"components/scrollbar/scrollbar\";\n\nconst SpringModal = ({\n  isOpen,\n  onRequestClose,\n  children,\n  defaultClose = true,\n  style = {}\n}) => {\n  const transition = useTransition(isOpen, null, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    }\n  });\n  const staticStyles = {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    padding: 0,\n    width: \"calc(100% + 1px)\",\n    height: \"100%\",\n    maxHeight: \"100vh\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: \"0px\",\n    zIndex: 99999\n  };\n  const buttonStyle = {\n    width: 40,\n    height: 40,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#ffffff\",\n    color: \"#0D1136\",\n    border: 0,\n    outline: 0,\n    boxShadow: \"none\",\n    borderRadius: \"50%\",\n    position: \"absolute\",\n    top: 20,\n    right: 20,\n    zIndex: 100000,\n    cursor: \"pointer\",\n    \":focus\": {\n      outline: 0,\n      boxShadow: \"none\"\n    }\n  };\n  const scrollbarStyle = {\n    height: \"100%\",\n    maxHeight: \"100%\"\n  };\n  return /*#__PURE__*/_jsx(BaseModal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    children: transition.map(({\n      item,\n      key,\n      props: transitionStyles\n    }) => item && /*#__PURE__*/_jsxs(animated.div, {\n      style: _objectSpread(_objectSpread(_objectSpread({}, transitionStyles), staticStyles), style),\n      children: [defaultClose && /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        onClick: onRequestClose,\n        style: _objectSpread({}, buttonStyle),\n        children: /*#__PURE__*/_jsx(CloseIcon, {\n          style: {\n            width: 12,\n            height: 12\n          }\n        })\n      }), /*#__PURE__*/_jsx(Scrollbar, {\n        style: _objectSpread({}, scrollbarStyle),\n        children: children\n      })]\n    }, key))\n  });\n};\n\nexport default SpringModal;","map":null,"metadata":{},"sourceType":"module"}