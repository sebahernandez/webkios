{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/components/type-nav/type-nav.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router, { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport css from '@styled-system/css';\nimport { CATEGORY_MENU_ITEMS } from 'site-settings/site-navigation';\nimport * as categoryMenuIcons from 'assets/icons/category-menu-icons';\nimport IconNavCard from './type-nav-card';\nconst CategoryWrapper = styled.div.withConfig({\n  displayName: \"type-nav__CategoryWrapper\",\n  componentId: \"sc-ni2luw-0\"\n})(css({\n  width: '100%',\n  display: 'flex',\n  flexWrap: 'wrap',\n  backgroundColor: 'white' // margin: '0 -7.5px',\n\n}));\nconst Col = styled.div.withConfig({\n  displayName: \"type-nav__Col\",\n  componentId: \"sc-ni2luw-1\"\n})(css({\n  width: '50%',\n  padding: '0 7.5px',\n  marginBottom: 15,\n  '@media screen and (min-width: 768px)': {\n    width: '33.333%'\n  }\n}));\n\nconst CategoryIcon = ({\n  name\n}) => {\n  const TagName = categoryMenuIcons[name];\n  return !!TagName ? /*#__PURE__*/_jsxDEV(TagName, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Invalid icon \", name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 36\n  }, this);\n};\n\nconst CategoryIconNav = props => {\n  const router = useRouter();\n\n  const handleOnClick = item => {\n    if (item.dynamic) {\n      Router.push('/[type]', `${item.href}`);\n      return;\n    }\n\n    Router.push(`${item.href}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CategoryWrapper, {\n    children: CATEGORY_MENU_ITEMS.map(item => /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(IconNavCard, _objectSpread({\n        onClick: () => handleOnClick(item),\n        icon: /*#__PURE__*/_jsxDEV(CategoryIcon, {\n          name: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this),\n        intlId: item.id,\n        defaultMessage: item.defaultMessage,\n        active: router.pathname === item.href || router.asPath === item.href\n      }, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CategoryIconNav;","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/components/type-nav/type-nav.tsx"],"names":["React","Router","useRouter","styled","css","CATEGORY_MENU_ITEMS","categoryMenuIcons","IconNavCard","CategoryWrapper","div","width","display","flexWrap","backgroundColor","Col","padding","marginBottom","CategoryIcon","name","TagName","CategoryIconNav","props","router","handleOnClick","item","dynamic","push","href","map","icon","id","defaultMessage","pathname","asPath"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,OAAO,KAAKC,iBAAZ,MAAmC,kCAAnC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,MAAMC,eAAe,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,GACnBL,GAAG,CAAC;AACFM,EAAAA,KAAK,EAAE,MADL;AAEFC,EAAAA,OAAO,EAAE,MAFP;AAGFC,EAAAA,QAAQ,EAAE,MAHR;AAIFC,EAAAA,eAAe,EAAE,OAJf,CAKF;;AALE,CAAD,CADgB,CAArB;AAUA,MAAMC,GAAG,GAAGX,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,GACPL,GAAG,CAAC;AACFM,EAAAA,KAAK,EAAE,KADL;AAEFK,EAAAA,OAAO,EAAE,SAFP;AAGFC,EAAAA,YAAY,EAAE,EAHZ;AAKF,0CAAwC;AACtCN,IAAAA,KAAK,EAAE;AAD+B;AALtC,CAAD,CADI,CAAT;;AAYA,MAAMO,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAMC,OAAO,GAAGb,iBAAiB,CAACY,IAAD,CAAjC;AACA,SAAO,CAAC,CAACC,OAAF,gBAAY,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAZ,gBAA0B;AAAA,gCAAiBD,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjC;AACD,CAHD;;AAKA,MAAME,eAAe,GAAIC,KAAD,IAAgB;AACtC,QAAMC,MAAM,GAAGpB,SAAS,EAAxB;;AAEA,QAAMqB,aAAa,GAAIC,IAAD,IAAU;AAC9B,QAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBxB,MAAAA,MAAM,CAACyB,IAAP,CAAY,SAAZ,EAAwB,GAAEF,IAAI,CAACG,IAAK,EAApC;AACA;AACD;;AACD1B,IAAAA,MAAM,CAACyB,IAAP,CAAa,GAAEF,IAAI,CAACG,IAAK,EAAzB;AACD,GAND;;AAQA,sBACE,QAAC,eAAD;AAAA,cACGtB,mBAAmB,CAACuB,GAApB,CAAyBJ,IAAD,iBACvB,QAAC,GAAD;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,OAAO,EAAE,MAAMD,aAAa,CAACC,IAAD,CAD9B;AAEE,QAAA,IAAI,eAAE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEA,IAAI,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFR;AAGE,QAAA,MAAM,EAAEL,IAAI,CAACM,EAHf;AAIE,QAAA,cAAc,EAAEN,IAAI,CAACO,cAJvB;AAKE,QAAA,MAAM,EACJT,MAAM,CAACU,QAAP,KAAoBR,IAAI,CAACG,IAAzB,IAAiCL,MAAM,CAACW,MAAP,KAAkBT,IAAI,CAACG;AAN5D,SAQMN,KARN;AAAA;AAAA;AAAA;AAAA;AADF,OAAUG,IAAI,CAACM,EAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7BD;;AA8BA,eAAeV,eAAf","sourcesContent":["import React from 'react';\nimport Router, { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport css from '@styled-system/css';\nimport { CATEGORY_MENU_ITEMS } from 'site-settings/site-navigation';\nimport * as categoryMenuIcons from 'assets/icons/category-menu-icons';\nimport IconNavCard from './type-nav-card';\n\nconst CategoryWrapper = styled.div(\n  css({\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    backgroundColor: 'white',\n    // margin: '0 -7.5px',\n  })\n);\n\nconst Col = styled.div(\n  css({\n    width: '50%',\n    padding: '0 7.5px',\n    marginBottom: 15,\n\n    '@media screen and (min-width: 768px)': {\n      width: '33.333%',\n    },\n  })\n);\n\nconst CategoryIcon = ({ name }) => {\n  const TagName = categoryMenuIcons[name];\n  return !!TagName ? <TagName /> : <p>Invalid icon {name}</p>;\n};\n\nconst CategoryIconNav = (props: any) => {\n  const router = useRouter();\n\n  const handleOnClick = (item) => {\n    if (item.dynamic) {\n      Router.push('/[type]', `${item.href}`);\n      return;\n    }\n    Router.push(`${item.href}`);\n  };\n\n  return (\n    <CategoryWrapper>\n      {CATEGORY_MENU_ITEMS.map((item) => (\n        <Col key={item.id}>\n          <IconNavCard\n            onClick={() => handleOnClick(item)}\n            icon={<CategoryIcon name={item.icon} />}\n            intlId={item.id}\n            defaultMessage={item.defaultMessage}\n            active={\n              router.pathname === item.href || router.asPath === item.href\n            }\n            {...props}\n          />\n        </Col>\n      ))}\n    </CategoryWrapper>\n  );\n};\nexport default CategoryIconNav;\n"]},"metadata":{},"sourceType":"module"}