{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/layouts/header/menu/auth-menu.tsx\";\nimport React from 'react';\nimport { Button } from 'components/button/button';\nimport { FormattedMessage } from 'react-intl';\nimport Popover from 'components/popover/popover';\nimport { AuthorizedMenu } from './authorized-menu';\nimport Cookies from 'universal-cookie';\n\nconst AuthMenu = ({\n  isAuthenticated,\n  onJoin,\n  onLogout,\n  avatar\n}) => {\n  let image = '/user.jpg';\n  let nombre = 'Invitado';\n  let user = null;\n  let access_token = null;\n  const cookie = new Cookies();\n\n  if (isAuthenticated) {\n    if (cookie.get('user_logged')) {\n      user = cookie.get('user_logged');\n      access_token = cookie.get('access_token');\n\n      if (user && access_token) {\n        image = user.image;\n        nombre = user.name;\n      }\n    }\n  }\n\n  return !isAuthenticated ? /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"primary\",\n    onClick: onJoin,\n    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n      id: \"joinButton\",\n      defaultMessage: \"join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Popover, {\n    direction: \"right\",\n    className: \"user-pages-dropdown\",\n    handler: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this),\n    content: /*#__PURE__*/_jsxDEV(AuthorizedMenu, {\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AuthMenu;","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/layouts/header/menu/auth-menu.tsx"],"names":["React","Button","FormattedMessage","Popover","AuthorizedMenu","Cookies","AuthMenu","isAuthenticated","onJoin","onLogout","avatar","image","nombre","user","access_token","cookie","get","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAOC,OAAP,MAAqB,kBAArB;;AASA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA,QAA3B;AAAqCC,EAAAA;AAArC,CAAD,KAA0D;AACzE,MAAIC,KAAK,GAAC,WAAV;AACA,MAAIC,MAAM,GAAC,UAAX;AACA,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,YAAY,GAAI,IAApB;AACA,QAAMC,MAAM,GAAG,IAAIV,OAAJ,EAAf;;AAEA,MAAGE,eAAH,EAAmB;AACjB,QAAIQ,MAAM,CAACC,GAAP,CAAW,aAAX,CAAJ,EAA+B;AAC7BH,MAAAA,IAAI,GAAGE,MAAM,CAACC,GAAP,CAAW,aAAX,CAAP;AACAF,MAAAA,YAAY,GAAGC,MAAM,CAACC,GAAP,CAAW,cAAX,CAAf;;AAEA,UAAGH,IAAI,IAAIC,YAAX,EAA0B;AACtBH,QAAAA,KAAK,GAAKE,IAAI,CAACF,KAAf;AACAC,QAAAA,MAAM,GAAGC,IAAI,CAACI,IAAd;AACH;AACF;AACF;;AAGD,SAAO,CAACV,eAAD,gBACL,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEC,MAAnC;AAAA,2BACE,QAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,YAArB;AAAkC,MAAA,cAAc,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,gBAKL,QAAC,OAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,OAAO,eAAE;AAAK,MAAA,GAAG,EAAEG,KAAV;AAAiB,MAAA,GAAG,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHX;AAIE,IAAA,OAAO,eAAE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEH;AAA1B;AAAA;AAAA;AAAA;AAAA;AAJX;AAAA;AAAA;AAAA;AAAA,UALF;AAYD,CAhCD;;AAiCA,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport { Button } from 'components/button/button';\nimport { FormattedMessage } from 'react-intl';\nimport Popover from 'components/popover/popover';\nimport { AuthorizedMenu } from './authorized-menu';\nimport { avatar } from 'assets/images/user.jpg';\nimport Cookies  from 'universal-cookie';\n\ninterface Props {\n  isAuthenticated: boolean;\n  onJoin: () => void;\n  onLogout: () => void;\n  avatar: string;\n}\n \nconst AuthMenu = ({ isAuthenticated, onJoin, onLogout, avatar }: Props) => {\n  let image='/user.jpg';\n  let nombre='Invitado';\n  let user = null;\n  let access_token  = null;\n  const cookie = new Cookies()\n\n  if(isAuthenticated){\n    if( cookie.get('user_logged') ){\n      user = cookie.get('user_logged')\n      access_token = cookie.get('access_token')\n\n      if(user && access_token)  {\n          image =   user.image;\n          nombre = user.name; \n      }\n    }\n  }\n   \n\n  return !isAuthenticated ? (\n    <Button variant=\"primary\" onClick={onJoin}>\n      <FormattedMessage id=\"joinButton\" defaultMessage=\"join\" />\n    </Button>\n  ) : (\n    <Popover\n      direction=\"right\"\n      className=\"user-pages-dropdown\"\n      handler={<img src={image} alt={nombre} />}\n      content={<AuthorizedMenu onLogout={onLogout} />}\n    />\n  );\n};\nexport default AuthMenu;\n"]},"metadata":{},"sourceType":"module"}