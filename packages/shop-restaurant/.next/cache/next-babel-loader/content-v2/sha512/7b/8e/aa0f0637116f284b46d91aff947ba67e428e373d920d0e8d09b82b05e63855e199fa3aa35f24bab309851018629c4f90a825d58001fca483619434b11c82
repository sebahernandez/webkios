{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/alejandrosandoval/space/world_eserp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport dynamic from 'next/dynamic';\nimport React, { useCallback, useState } from 'react';\nimport { ModalContext } from './modal.context';\nimport { useMedia } from 'utils/use-media';\nvar SpringModal = dynamic(function () {\n  return import('components/spring-modal/spring-modal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/spring-modal/spring-modal')];\n    },\n    modules: [\"../contexts/modal/modal.provider.tsx -> \" + 'components/spring-modal/spring-modal']\n  }\n});\nvar CenterModal = dynamic(function () {\n  return import('components/modal/center-modal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/modal/center-modal')];\n    },\n    modules: [\"../contexts/modal/modal.provider.tsx -> \" + 'components/modal/center-modal']\n  }\n});\n/**\n *  Modal de Detalle del Producto\n */\n\n/**\n * Modal Provider Props\n */\n\n/**\n * Modal Provider\n *\n * Provides modal context and renders ModalRoot.\n */\nexport var ModalProvider = function ModalProvider(_ref) {\n  var container = _ref.container,\n      rootComponent = _ref.rootComponent,\n      children = _ref.children;\n\n  if (container && !(container instanceof HTMLElement)) {\n    throw new Error(\"Container must specify DOM element to mount modal root into.\\n    This behavior has changed in 3.0.0. Please use `rootComponent` prop instead.\\n    See: https://github.com/mpontus/react-modal-hook/issues/18\");\n  }\n\n  var _useState = useState({}),\n      modals = _useState[0],\n      setModals = _useState[1];\n\n  var showModal = function showModal(key, modal) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return setModals(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, key, _objectSpread({\n        component: modal,\n        isOpen: true\n      }, options)));\n    });\n  };\n\n  var hideModal = useCallback(function (key, onClose) {\n    setModals(function (prevConfig) {\n      return _objectSpread(_objectSpread({}, prevConfig), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, prevConfig[key]), {}, {\n        isOpen: false\n      })));\n    });\n\n    if (onClose) {\n      onClose();\n    }\n  }, []);\n  var contextValue = {\n    showModal: showModal,\n    hideModal: hideModal\n  };\n  var isSmall = useMedia('(max-width: 767px)');\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [children, Object.keys(modals).map(function (currentKey) {\n        console.log(currentKey, modals[currentKey]);\n        var _modals$currentKey = modals[currentKey],\n            Component = _modals$currentKey.component,\n            isOpen = _modals$currentKey.isOpen,\n            onClose = _modals$currentKey.onClose;\n        return isSmall ? /*#__PURE__*/_jsx(SpringModal, {\n          children: /*#__PURE__*/_jsx(Component, {}),\n          isOpen: isOpen,\n          onRequestClose: function onRequestClose() {\n            return hideModal(currentKey, onClose);\n          }\n        }, currentKey) : /*#__PURE__*/_jsx(CenterModal, {\n          children: /*#__PURE__*/_jsx(Component, {}),\n          isOpen: isOpen,\n          onRequestClose: function onRequestClose() {\n            return hideModal(currentKey, onClose);\n          }\n        }, currentKey);\n      })]\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}