{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Modal } from '@redq/reuse-modal';\nimport { SEO } from 'components/seo';\nimport Checkout from 'features/checkouts/checkout-two/checkout-two';\nimport { ProfileProvider } from 'contexts/profile/profile.provider';\nimport { useQuery } from '@apollo/client';\nimport config from 'setting/config';\nimport { GET_INFO_SHOP } from 'utils/graphql/query/infoshop.query';\nconst data1 = {\n  me: {\n    id: 12,\n    name: '',\n    email: '',\n    address: {\n      id: 122,\n      type: 'a',\n      name: 'aaa',\n      info: 'asa'\n    },\n    contact: {\n      id: 423,\n      type: 'ds',\n      number: 32423\n    },\n    card: {\n      id: 4332,\n      type: '323',\n      cardType: 'dsdsa',\n      name: 'dfsfdrfsafs',\n      lastFourDigit: '4234242'\n    }\n  }\n};\n\nconst CheckoutPage = ({\n  deviceType\n}) => {\n  const {\n    data,\n    error,\n    refetch,\n    fetchMore\n  } = useQuery(GET_INFO_SHOP, {\n    variables: {\n      clientid: config().SUBSCRIPTION_ID\n    }\n  }); // const { data, error, loading } = useQuery(GET_LOGGED_IN_CUSTOMER);\n  // if (loading) {\n  //   return <div>cargando...</div>;\n  // }\n  // if (error) return <div>{error.message}</div>;\n\n  const token = 'true';\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(SEO, {\n      title: \"Checkout - \" + (data !== undefined && data.info_shop_view !== undefined && data.info_shop_view[0].site_name),\n      description: data !== undefined && data.info_shop_view !== undefined && data.info_shop_view[0].description\n    }), /*#__PURE__*/_jsx(ProfileProvider, {\n      initData: data1.me,\n      children: /*#__PURE__*/_jsx(Modal, {\n        children: /*#__PURE__*/_jsx(Checkout, {\n          token: token,\n          deviceType: deviceType\n        })\n      })\n    })]\n  });\n};\n\nexport const getStaticProps = async () => {\n  //  const apolloClient = initializeApollo();\n  //  await apolloClient.query({\n  //    query: GET_LOGGED_IN_CUSTOMER,\n  //  });\n  return {\n    props: {// initialApolloState: apolloClient.cache.extract(),\n    }\n  };\n};\nexport default CheckoutPage;","map":null,"metadata":{},"sourceType":"module"}