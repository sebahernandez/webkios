{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/features/contact/contact.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport RadioGroup from 'components/radio-group/radio-group';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { Button } from 'components/button/button';\nimport { handleModal } from 'features/checkouts/checkout-modal';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport CreateOrUpdateContact from 'components/contact-card/contact-card';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { CardHeader } from 'components/card-header/card-header';\nimport { ButtonGroup } from 'components/button-group/button-group';\nimport { Box } from 'components/box';\nimport { Plus } from 'assets/icons/PlusMinus';\n\nconst Contact = ({\n  increment = false,\n  contacts,\n  flexStart = false,\n  icon = false,\n  buttonProps = {\n    size: 'big',\n    variant: 'outlined',\n    type: 'button',\n    className: 'add-button'\n  }\n}) => {\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const {\n    state: {\n      contact2\n    },\n    dispatch\n  } = useContext(ProfileContext);\n\n  const handleOnDelete = async item => {\n    dispatch({\n      type: 'DELETE_CONTACT',\n      payload: item.id\n    });\n    return await deleteContactMutation({\n      variables: {\n        contactId: JSON.stringify(item.id)\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      increment: increment,\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"contactNumberText\",\n        defaultMessage: \"Select Your Contact Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      flexStart: flexStart,\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        items: contacts,\n        component: item => /*#__PURE__*/_jsxDEV(RadioCard, {\n          id: item.id,\n          title: item.type,\n          content: item.number,\n          checked: item.type === 'primary',\n          onChange: () => dispatch({\n            type: 'SET_PRIMARY_CONTACT',\n            payload: item.id.toString()\n          }),\n          name: \"contact\",\n          onEdit: () => handleModal(CreateOrUpdateContact, item),\n          onDelete: () => handleOnDelete(item)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this),\n        secondaryComponent: /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({}, buttonProps), {}, {\n          onClick: () => handleModal(CreateOrUpdateContact, 'add-contact-modal'),\n          children: [icon && /*#__PURE__*/_jsxDEV(Box, {\n            mr: 2,\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              width: \"10px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"addContactBtn\",\n            defaultMessage: \"Add Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Contact;","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/features/contact/contact.tsx"],"names":["React","useContext","FormattedMessage","RadioGroup","RadioCard","Button","handleModal","ProfileContext","CreateOrUpdateContact","useMutation","DELETE_CONTACT","CardHeader","ButtonGroup","Box","Plus","Contact","increment","contacts","flexStart","icon","buttonProps","size","variant","type","className","deleteContactMutation","state","contact2","dispatch","handleOnDelete","item","payload","id","variables","contactId","JSON","stringify","number","toString"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport RadioGroup from 'components/radio-group/radio-group';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { Button } from 'components/button/button';\nimport { handleModal } from 'features/checkouts/checkout-modal';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport CreateOrUpdateContact from 'components/contact-card/contact-card';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport { CardHeader } from 'components/card-header/card-header';\nimport { ButtonGroup } from 'components/button-group/button-group';\nimport { Box } from 'components/box';\nimport { Plus } from 'assets/icons/PlusMinus';\ninterface Props {\n  increment?: boolean;\n  flexStart?: boolean;\n  icon?: boolean;\n  buttonProps?: any;\n  contacts?: any;\n}\n\nconst Contact = ({\n  increment = false,\n  contacts,\n  flexStart = false,\n  icon = false,\n  buttonProps = {\n    size: 'big',\n    variant: 'outlined',\n    type: 'button',\n    className: 'add-button',\n  },\n}: Props) => {\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n\n  const {\n    state: { contact2 },\n    dispatch,\n  } = useContext(ProfileContext);\n\n  const handleOnDelete = async (item) => {\n    dispatch({ type: 'DELETE_CONTACT', payload: item.id });\n    return await deleteContactMutation({\n      variables: { contactId: JSON.stringify(item.id) },\n    });\n  };\n  return (\n    <>\n      <CardHeader increment={increment}>\n        <FormattedMessage\n          id='contactNumberText'\n          defaultMessage='Select Your Contact Number'\n        />\n      </CardHeader>\n      <ButtonGroup flexStart={flexStart}>\n        <RadioGroup\n          items={contacts}\n          component={(item: any) => (\n            <RadioCard\n              id={item.id}\n              key={item.id}\n              title={item.type}\n              content={item.number}\n              checked={item.type === 'primary'}\n              onChange={() =>\n                dispatch({\n                  type: 'SET_PRIMARY_CONTACT',\n                  payload: item.id.toString(),\n                })\n              }\n              name='contact'\n              onEdit={() => handleModal(CreateOrUpdateContact, item)}\n              onDelete={() => handleOnDelete(item)}\n            />\n          )}\n          secondaryComponent={\n            <Button\n              {...buttonProps}\n              onClick={() =>\n                handleModal(CreateOrUpdateContact, 'add-contact-modal')\n              }\n            >\n              {icon && (\n                <Box mr={2}>\n                  <Plus width='10px' />\n                </Box>\n              )}\n              <FormattedMessage\n                id='addContactBtn'\n                defaultMessage='Add Contact'\n              />\n            </Button>\n          }\n        />\n      </ButtonGroup>\n    </>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}