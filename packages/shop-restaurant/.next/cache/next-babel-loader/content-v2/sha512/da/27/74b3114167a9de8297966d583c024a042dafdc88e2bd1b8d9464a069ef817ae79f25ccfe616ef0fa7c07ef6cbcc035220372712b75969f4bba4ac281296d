{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/pages/checkout.tsx\";\nimport React, { useEffect } from 'react';\nimport { SEO } from 'components/seo';\nimport { useQuery } from '@apollo/client';\nimport config from 'setting/config';\nimport { GET_INFO_SHOP } from 'utils/graphql/query/infoshop.query';\nimport { GET_CLIENTE_USERNAME } from 'utils/graphql/query/clients.query';\nconst data1 = {\n  me: {\n    id: 12,\n    name: '',\n    email: '',\n    address: {\n      id: 122,\n      type: 'a',\n      name: 'aaa',\n      info: 'asa'\n    },\n    contact: {\n      id: 423,\n      type: 'ds',\n      number: 32423\n    },\n    card: {\n      id: 4332,\n      type: '323',\n      cardType: 'dsdsa',\n      name: 'dfsfdrfsafs',\n      lastFourDigit: '4234242'\n    }\n  }\n};\n\nconst CheckoutPage = ({\n  deviceType\n}) => {\n  const [email, setEmail] = React.useState('');\n  const {\n    data\n  } = useQuery(GET_INFO_SHOP, {\n    variables: {\n      clientid: config().SUBSCRIPTION_ID\n    }\n  });\n  const {\n    data: data2,\n    error,\n    refetch,\n    fetchMore\n  } = useQuery(GET_CLIENTE_USERNAME, {\n    variables: {\n      clientid: config().SUBSCRIPTION_ID,\n      username: email\n    }\n  });\n  useEffect(() => {\n    // Actualiza el título del documento usando la API del navegador\n    // document.title = `You clicked ${count} times`;\n    if (false) {\n      if (localStorage && localStorage.getItem('access_token')) {\n        let access_token = JSON.parse(localStorage.getItem('access_token'));\n\n        if (access_token.providerId && access_token.providerId === 'google.com') {\n          console.log('lo tengo csm');\n          setEmail(JSON.parse(localStorage.getItem('user_logged')).email);\n\n          if (data2) {\n            console.log(JSON.stringify(data2));\n          }\n        }\n      }\n    }\n  });\n  /*     \n    if (typeof window !== 'undefined') {\n              \n          if( localStorage && localStorage.getItem('access_token')) {\n  \n              let access_token = JSON.parse(localStorage.getItem('access_token'))\n              if(access_token.providerId && access_token.providerId === 'google.com')\n              {\n                console.log('lo tengo csm')\n                setEmail(JSON.parse(localStorage.getItem('user_logged')).email)\n                if(data2){\n                  console.log(JSON.stringify(data2))\n                } \n              }\n          }\n      }  \n   */\n  // const { data, error, loading } = useQuery(GET_LOGGED_IN_CUSTOMER);\n  // if (loading) {\n  //   return <div>cargando...</div>;\n  // }\n  // if (error) return <div>{error.message}</div>;\n\n  const token = 'true';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SEO, {\n      title: \"Checkout - \" + (data !== undefined && data.info_shop_view !== undefined && data.info_shop_view[0].site_name),\n      description: data !== undefined && data.info_shop_view !== undefined && data.info_shop_view[0].description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport const getStaticProps = async () => {\n  //  const apolloClient = initializeApollo();\n  //  await apolloClient.query({\n  //    query: GET_LOGGED_IN_CUSTOMER,\n  //  });\n  return {\n    props: {// initialApolloState: apolloClient.cache.extract(),\n    }\n  };\n};\nexport default CheckoutPage;","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/pages/checkout.tsx"],"names":["React","useEffect","SEO","useQuery","config","GET_INFO_SHOP","GET_CLIENTE_USERNAME","data1","me","id","name","email","address","type","info","contact","number","card","cardType","lastFourDigit","CheckoutPage","deviceType","setEmail","useState","data","variables","clientid","SUBSCRIPTION_ID","data2","error","refetch","fetchMore","username","localStorage","getItem","access_token","JSON","parse","providerId","console","log","stringify","token","undefined","info_shop_view","site_name","description","getStaticProps","props"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { NextPage, GetStaticProps } from 'next';\nimport { Modal } from '@redq/reuse-modal';\nimport { SEO } from 'components/seo';\nimport Checkout from 'features/checkouts/checkout-two/checkout-two';\nimport { ProfileProvider } from 'contexts/profile/profile.provider';\nimport { initializeApollo } from 'utils/apollo';\nimport { useQuery, gql } from '@apollo/client';\nimport config from 'setting/config';\nimport { GET_INFO_SHOP } from 'utils/graphql/query/infoshop.query';\nimport { GET_CLIENTE_USERNAME } from 'utils/graphql/query/clients.query';\n\ntype Props = {\n  deviceType: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\n\n\nconst data1 = {\n  me : {\n    id:12,\n    name: '',\n    email: '',\n    address: {\n      id:122,\n      type:'a',\n      name:'aaa',\n      info:'asa',\n    },\n    contact: {\n      id: 423,\n      type: 'ds',\n      number:32423\n    },\n    card: {\n      id:4332,\n      type: '323',\n      cardType: 'dsdsa',\n      name: 'dfsfdrfsafs',\n      lastFourDigit: '4234242'\n    }\n  }\n}\n\nconst CheckoutPage: NextPage<Props> = ({ deviceType }) => {\n\n  const [email, setEmail] = React.useState('');\n\n  const { data } = useQuery(GET_INFO_SHOP,\n    {\n        variables: {\n          clientid: config().SUBSCRIPTION_ID\n        }\n    }); \n\n  const { data:data2, error, refetch, fetchMore } = useQuery(GET_CLIENTE_USERNAME,\n    {\n        variables: {\n          clientid: config().SUBSCRIPTION_ID,\n          username: email\n        }\n    }); \n    \n    useEffect(() => {\n      // Actualiza el título del documento usando la API del navegador\n      // document.title = `You clicked ${count} times`;\n\n      if (typeof window !== 'undefined') {\n            \n        if( localStorage && localStorage.getItem('access_token')) {\n\n            let access_token = JSON.parse(localStorage.getItem('access_token'))\n            if(access_token.providerId && access_token.providerId === 'google.com')\n            {\n              console.log('lo tengo csm')\n              setEmail(JSON.parse(localStorage.getItem('user_logged')).email)\n              if(data2){\n                console.log(JSON.stringify(data2))\n              } \n            }\n        }\n    }  \n    });\n\n\n/*     \n  if (typeof window !== 'undefined') {\n            \n        if( localStorage && localStorage.getItem('access_token')) {\n\n            let access_token = JSON.parse(localStorage.getItem('access_token'))\n            if(access_token.providerId && access_token.providerId === 'google.com')\n            {\n              console.log('lo tengo csm')\n              setEmail(JSON.parse(localStorage.getItem('user_logged')).email)\n              if(data2){\n                console.log(JSON.stringify(data2))\n              } \n            }\n        }\n    }  \n */\n\n\n  // const { data, error, loading } = useQuery(GET_LOGGED_IN_CUSTOMER);\n  // if (loading) {\n  //   return <div>cargando...</div>;\n  // }\n  // if (error) return <div>{error.message}</div>;\n  const token = 'true';\n\n  return (\n    <>\n      <SEO title={\"Checkout - \" + (data !== undefined && data.info_shop_view !== undefined && data.info_shop_view[0].site_name)} \n       description={(data !== undefined && data.info_shop_view !== undefined && data.info_shop_view[0].description)}  />\n     {/*  <ProfileProvider initData={data1.me}>\n        <Modal> \n          <Checkout token={token} deviceType={deviceType} />\n        </Modal>\n      </ProfileProvider> */}\n    </>\n  );\n};\n\nexport const getStaticProps: GetStaticProps = async () => {\n//  const apolloClient = initializeApollo();\n\n//  await apolloClient.query({\n//    query: GET_LOGGED_IN_CUSTOMER,\n//  });\n\n  return {\n    props: {\n     // initialApolloState: apolloClient.cache.extract(),\n    },\n  };\n}; \nexport default CheckoutPage;\n"]},"metadata":{},"sourceType":"module"}