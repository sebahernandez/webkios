{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { ProductCard } from 'components/product-card/product-card-four';\nimport styled from 'styled-components';\nimport css from '@styled-system/css';\nimport ErrorMessage from 'components/error-message/error-message';\nimport { useQuery, NetworkStatus } from '@apollo/client';\nimport { GET_PRODUCTS } from 'graphql/query/products.query';\nimport { useRouter } from 'next/router';\nimport { Button } from 'components/button/loadmore-button';\nimport { FormattedMessage } from 'react-intl';\nimport { Box } from 'components/box';\nimport NoResultFound from 'components/no-result/no-result';\nimport { LoaderItem, LoaderWrapper } from './product-list/product-list.style';\nimport Placeholder from 'components/placeholder/placeholder'; // import { Button } from './button';\n\nconst Grid = styled.div.withConfig({\n  displayName: \"product-grid__Grid\",\n  componentId: \"sc-1gh6w5b-0\"\n})(css({\n  display: 'grid',\n  gridGap: '10px',\n  gridTemplateColumns: 'repeat(1, minmax(180px, 1fr))',\n  '@media screen and (min-width: 440px)': {\n    gridTemplateColumns: 'repeat(2, minmax(180px, 1fr))'\n  },\n  '@media screen and (min-width: 768px)': {\n    gridTemplateColumns: 'repeat(3, minmax(180px, 1fr))',\n    gridGap: '20px'\n  },\n  '@media screen and (min-width: 991px)': {\n    gridTemplateColumns: 'repeat(2, minmax(180px, 1fr))',\n    gridGap: '30px'\n  },\n  '@media screen and (min-width: 1100px)': {\n    gridTemplateColumns: 'repeat(3, minmax(180px, 1fr))'\n  },\n  '@media screen and (min-width: 1700px)': {\n    gridTemplateColumns: 'repeat(4, minmax(240px, 1fr))'\n  },\n  '@media screen and (min-width: 2200px)': {\n    gridTemplateColumns: 'repeat(5, minmax(240px, 1fr))'\n  }\n}));\nexport const ProductGrid = ({\n  style,\n  type,\n  loadMore = true,\n  fetchLimit = 16\n}) => {\n  const router = useRouter();\n  const {\n    data,\n    error,\n    loading,\n    fetchMore,\n    networkStatus\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type,\n      text: router.query.text,\n      category: router.query.category,\n      offset: 0,\n      limit: fetchLimit\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  const loadingMore = networkStatus === NetworkStatus.fetchMore;\n  if (error) return /*#__PURE__*/_jsx(ErrorMessage, {\n    message: error.message\n  });\n\n  if (loading && !loadingMore) {\n    return /*#__PURE__*/_jsxs(LoaderWrapper, {\n      children: [/*#__PURE__*/_jsx(LoaderItem, {\n        children: /*#__PURE__*/_jsx(Placeholder, {\n          uniqueKey: \"1\"\n        })\n      }), /*#__PURE__*/_jsx(LoaderItem, {\n        children: /*#__PURE__*/_jsx(Placeholder, {\n          uniqueKey: \"2\"\n        })\n      }), /*#__PURE__*/_jsx(LoaderItem, {\n        children: /*#__PURE__*/_jsx(Placeholder, {\n          uniqueKey: \"3\"\n        })\n      })]\n    });\n  }\n\n  if (!data || !data.products || data.products.items.length === 0) {\n    return /*#__PURE__*/_jsx(NoResultFound, {});\n  }\n\n  const handleLoadMore = () => {\n    fetchMore({\n      variables: {\n        offset: Number(data.products.items.length),\n        limit: 10\n      }\n    });\n  };\n\n  const {\n    items,\n    hasMore\n  } = data.products;\n  return /*#__PURE__*/_jsxs(\"section\", {\n    children: [/*#__PURE__*/_jsx(Grid, {\n      style: style,\n      children: items.map((product, idx) => /*#__PURE__*/_jsx(ProductCard, {\n        data: product\n      }, product.id))\n    }), loadMore && hasMore && /*#__PURE__*/_jsx(Box, {\n      style: {\n        textAlign: 'center'\n      },\n      mt: '2rem',\n      children: /*#__PURE__*/_jsx(Button, {\n        onClick: handleLoadMore,\n        loading: loadingMore,\n        variant: \"secondary\",\n        style: {\n          fontSize: 14,\n          display: 'inline-flex'\n        },\n        border: \"1px solid #f1f1f1\",\n        children: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"loadMoreButton\",\n          defaultMessage: \"Load More\"\n        })\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}