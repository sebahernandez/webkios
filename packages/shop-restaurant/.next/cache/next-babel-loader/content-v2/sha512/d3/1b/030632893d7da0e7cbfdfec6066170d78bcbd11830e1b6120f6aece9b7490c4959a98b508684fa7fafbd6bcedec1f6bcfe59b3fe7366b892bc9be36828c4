{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/components/tree-menu/tree-menu.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { usePrevious, useMeasure } from 'utils/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './tree-menu.style';\nimport { Button } from 'components/button/button';\nimport { ArrowNext } from 'assets/icons/ArrowNext';\nimport * as icons from 'assets/icons/category-icons';\nconst Tree = /*#__PURE__*/React.memo(({\n  children,\n  name,\n  icon,\n  // isOpen,\n  onClick,\n  dropdown,\n  onToggleBtnClick,\n  depth,\n  defaultOpen = false\n}) => {\n  const {\n    0: isOpen,\n    1: setOpen\n  } = useState(defaultOpen);\n  useEffect(() => {\n    setOpen(defaultOpen);\n  }, [defaultOpen]);\n  const previous = usePrevious(isOpen);\n  const [bind, {\n    height: viewHeight\n  }] = useMeasure();\n  const {\n    height,\n    opacity,\n    transform\n  } = useSpring({\n    from: {\n      height: 0,\n      opacity: 0,\n      transform: 'translate3d(20px,0,0)'\n    },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`\n    }\n  }); // const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n  // const Icon = icon ? Icons[icon] : null;\n\n  const Icon = ({\n    iconName,\n    style\n  }) => {\n    const TagName = icons[iconName];\n    return !!TagName ? /*#__PURE__*/_jsxDEV(TagName, {\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Invalid icon \", iconName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    depth: depth,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      open: isOpen,\n      depth: depth,\n      className: depth,\n      children: [icon && /*#__PURE__*/_jsxDEV(IconWrapper, {\n        depth: depth,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          iconName: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        onClick: onClick,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), dropdown === true && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setOpen(!isOpen),\n        variant: \"text\",\n        className: \"toggleButton\",\n        children: /*#__PURE__*/_jsxDEV(ArrowNext, {\n          width: \"16px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        opacity,\n        height: isOpen && previous === isOpen ? 'auto' : height\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, _objectSpread(_objectSpread({\n        style: {\n          transform\n        }\n      }, bind), {}, {\n        children: children\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n});\nexport const TreeMenu = ({\n  data,\n  className,\n  onClick,\n  active\n}) => {\n  const handler = children => {\n    return children.map(subOption => {\n      if (!subOption.children) {\n        return /*#__PURE__*/_jsxDEV(Tree, {\n          name: subOption.title,\n          icon: subOption.icon,\n          depth: \"child\",\n          onClick: () => onClick(subOption.slug),\n          defaultOpen: active === subOption.slug\n        }, subOption.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tree, {\n        name: subOption.title,\n        icon: subOption.icon,\n        dropdown: !subOption.children.length ? false : true,\n        depth: \"parent\",\n        onClick: () => onClick(subOption.slug),\n        defaultOpen: active === subOption.slug || subOption.children.some(item => item.slug === active),\n        children: handler(subOption.children)\n      }, subOption.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: handler(data)\n  }, void 0, false);\n};","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/components/tree-menu/tree-menu.tsx"],"names":["React","useState","useEffect","usePrevious","useMeasure","useSpring","animated","Frame","Title","Content","Header","IconWrapper","Button","ArrowNext","icons","Tree","memo","children","name","icon","onClick","dropdown","onToggleBtnClick","depth","defaultOpen","isOpen","setOpen","previous","bind","height","viewHeight","opacity","transform","from","to","Icon","iconName","style","TagName","TreeMenu","data","className","active","handler","map","subOption","title","slug","length","some","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { usePrevious, useMeasure } from 'utils/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './tree-menu.style';\nimport { Button } from 'components/button/button';\nimport { ArrowNext } from 'assets/icons/ArrowNext';\nimport * as icons from 'assets/icons/category-icons';\n\nconst Tree = React.memo(\n  ({\n    children,\n    name,\n    icon,\n    // isOpen,\n    onClick,\n    dropdown,\n    onToggleBtnClick,\n    depth,\n    defaultOpen = false,\n  }: any) => {\n    const [isOpen, setOpen] = useState(defaultOpen);\n    useEffect(() => {\n      setOpen(defaultOpen);\n    }, [defaultOpen]);\n    const previous = usePrevious(isOpen);\n    const [bind, { height: viewHeight }] = useMeasure();\n    const { height, opacity, transform } = useSpring<any>({\n      from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\n      to: {\n        height: isOpen ? viewHeight : 0,\n        opacity: isOpen ? 1 : 0,\n        transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`,\n      },\n    });\n    // const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n    // const Icon = icon ? Icons[icon] : null;\n    const Icon = ({ iconName, style }: { iconName: any; style?: any }) => {\n      const TagName = icons[iconName];\n      return !!TagName ? (\n        <TagName style={style} />\n      ) : (\n        <p>Invalid icon {iconName}</p>\n      );\n    };\n    return (\n      <Frame depth={depth}>\n        <Header open={isOpen} depth={depth} className={depth}>\n          {icon && (\n            <IconWrapper depth={depth}>\n              <Icon iconName={icon} />\n            </IconWrapper>\n          )}\n          <Title onClick={onClick}>{name}</Title>\n\n          {dropdown === true && (\n            <Button\n              onClick={() => setOpen(!isOpen)}\n              variant=\"text\"\n              className=\"toggleButton\"\n            >\n              <ArrowNext width=\"16px\" />\n            </Button>\n          )}\n        </Header>\n        <Content\n          style={{\n            opacity,\n            height: isOpen && previous === isOpen ? 'auto' : height,\n          }}\n        >\n          <animated.div style={{ transform }} {...bind} children={children} />\n        </Content>\n      </Frame>\n    );\n  }\n);\n\ntype Props = {\n  className?: any;\n  data: any;\n  onClick: (slug: string) => void;\n  active: string | string[];\n};\nexport const TreeMenu: React.FC<Props> = ({\n  data,\n  className,\n  onClick,\n  active,\n}) => {\n  const handler = (children) => {\n    return children.map((subOption) => {\n      if (!subOption.children) {\n        return (\n          <Tree\n            key={subOption.title}\n            name={subOption.title}\n            icon={subOption.icon}\n            depth=\"child\"\n            onClick={() => onClick(subOption.slug)}\n            defaultOpen={active === subOption.slug}\n          />\n        );\n      }\n      return (\n        <Tree\n          key={subOption.title}\n          name={subOption.title}\n          icon={subOption.icon}\n          dropdown={!subOption.children.length ? false : true}\n          depth=\"parent\"\n          onClick={() => onClick(subOption.slug)}\n          defaultOpen={\n            active === subOption.slug ||\n            subOption.children.some((item) => item.slug === active)\n          }\n        >\n          {handler(subOption.children)}\n        </Tree>\n      );\n    });\n  };\n  return <>{handler(data)}</>;\n};\n"]},"metadata":{},"sourceType":"module"}