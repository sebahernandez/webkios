{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/components/modal/center-modal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport { BaseModal } from 'react-spring-modal';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { Scrollbar } from 'components/scrollbar/scrollbar';\n\nconst CenterModal = ({\n  isOpen,\n  onRequestClose,\n  children,\n  style = {}\n}) => {\n  const transition = useTransition(isOpen, null, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    }\n  });\n  const staticStyles = {\n    padding: 0,\n    maxWidth: 'calc(100% - 30px)',\n    height: 'auto',\n    maxHeight: 'calc(100vh - 30px)',\n    backgroundColor: '#ffffff',\n    borderRadius: '10px',\n    display: 'flex',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: 99999\n  };\n  const buttonStyle = {\n    width: 35,\n    height: 35,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffff',\n    color: '#0D1136',\n    border: 0,\n    outline: 0,\n    boxShadow: 'none',\n    borderRadius: '50%',\n    position: 'fixed',\n    top: '20px',\n    right: '20px',\n    zIndex: 100000,\n    cursor: 'pointer',\n    ':focus': {\n      outline: 0,\n      boxShadow: 'none'\n    }\n  };\n  const scrollbarStyle = {\n    height: '100%',\n    width: '100%' // maxHeight: 'calc(100vh - 30px)',\n\n  };\n  return /*#__PURE__*/_jsxDEV(BaseModal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    children: transition.map(({\n      item,\n      key,\n      props: transitionStyles\n    }) => item && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(animated.div, {\n        style: _objectSpread({}, transitionStyles),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onRequestClose,\n          style: _objectSpread({}, buttonStyle),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            style: {\n              width: 11,\n              height: 11\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        style: _objectSpread(_objectSpread(_objectSpread({}, transitionStyles), staticStyles), style),\n        children: /*#__PURE__*/_jsxDEV(Scrollbar, {\n          style: _objectSpread({}, scrollbarStyle),\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CenterModal;","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/components/modal/center-modal.tsx"],"names":["React","Fragment","useTransition","animated","BaseModal","CloseIcon","Scrollbar","CenterModal","isOpen","onRequestClose","children","style","transition","from","opacity","enter","leave","staticStyles","padding","maxWidth","height","maxHeight","backgroundColor","borderRadius","display","position","top","left","transform","zIndex","buttonStyle","width","alignItems","justifyContent","color","border","outline","boxShadow","right","cursor","scrollbarStyle","map","item","key","props","transitionStyles"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport { BaseModal } from 'react-spring-modal';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { Scrollbar } from 'components/scrollbar/scrollbar';\n\ntype SpringModalProps = {\n  isOpen: boolean;\n  onRequestClose: () => void;\n  children: React.ReactNode;\n  style?: any;\n};\n\nconst CenterModal: React.FC<SpringModalProps> = ({\n  isOpen,\n  onRequestClose,\n  children,\n  style = {},\n}) => {\n  const transition = useTransition(isOpen, null, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  });\n\n  const staticStyles = {\n    padding: 0,\n    maxWidth: 'calc(100% - 30px)',\n    height: 'auto',\n    maxHeight: 'calc(100vh - 30px)',\n    backgroundColor: '#ffffff',\n    borderRadius: '10px',\n    display: 'flex',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: 99999,\n  };\n\n  const buttonStyle = {\n    width: 35,\n    height: 35,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffff',\n    color: '#0D1136',\n    border: 0,\n    outline: 0,\n    boxShadow: 'none',\n    borderRadius: '50%',\n    position: 'fixed' as 'fixed',\n    top: '20px',\n    right: '20px',\n    zIndex: 100000,\n    cursor: 'pointer',\n\n    ':focus': {\n      outline: 0,\n      boxShadow: 'none',\n    },\n  };\n\n  const scrollbarStyle = {\n    height: '100%',\n    width: '100%',\n    // maxHeight: 'calc(100vh - 30px)',\n  };\n\n  return (\n    <BaseModal isOpen={isOpen} onRequestClose={onRequestClose}>\n      {transition.map(\n        ({ item, key, props: transitionStyles }) =>\n          item && (\n            <Fragment key={key}>\n              <animated.div style={{ ...transitionStyles }}>\n                <button\n                  type='button'\n                  onClick={onRequestClose}\n                  style={{ ...buttonStyle }}\n                >\n                  <CloseIcon style={{ width: 11, height: 11 }} />\n                </button>\n              </animated.div>\n\n              <animated.div\n                key={key}\n                style={{ ...transitionStyles, ...staticStyles, ...style }}\n              >\n                <Scrollbar style={{ ...scrollbarStyle }}>{children}</Scrollbar>\n              </animated.div>\n            </Fragment>\n          )\n      )}\n    </BaseModal>\n  );\n};\n\nexport default CenterModal;\n"]},"metadata":{},"sourceType":"module"}