{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/alejandrosandoval/space/world_eserp/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alejandrosandoval/space/world_eserp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/alejandrosandoval/space/world_eserp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/components/address-card/address-card.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/client';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\nimport { UPDATE_ADDRESS } from 'utils/graphql/mutation/address';\nimport { INSERT_ADDRESS } from 'utils/graphql/mutation/address';\nimport Cookies from 'universal-cookie'; // Shape of form values\n\nvar cookie = new Cookies(); // Wrap our form with the using withFormik HoC\n\nvar FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('El Título es un dato requerido!'),\n    info: Yup.string().required('La Dirección es Requerida')\n  }),\n  handleSubmit: function handleSubmit(values) {// do submitting things\n  }\n});\n\nvar UpdateAddress = function UpdateAddress(props) {\n  _s();\n\n  var isValid = props.isValid,\n      item = props.item,\n      values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      dirty = props.dirty,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleReset = props.handleReset,\n      isSubmitting = props.isSubmitting;\n  var addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info\n  };\n\n  var _cookie$get = cookie.get('cid'),\n      cid = _cookie$get.cid;\n\n  var _useContext = useContext(ProfileContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useMutation = useMutation(UPDATE_ADDRESS),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addressMutation = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var _useMutation3 = useMutation(INSERT_ADDRESS),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      addressInsertMutation = _useMutation4[0];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var addressData, _addressData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(isValid && item === 'add-address-modal')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return addressInsertMutation({\n                variables: {\n                  \"name\": values.name,\n                  \"info\": values.info,\n                  \"type\": \"secondary\",\n                  \"cliente\": cookie.get('customer').id,\n                  \"clientid\": cid\n                }\n              });\n\n            case 3:\n              addressData = _context.sent;\n              closeModal();\n              _context.next = 12;\n              break;\n\n            case 7:\n              if (!isValid) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 10;\n              return addressMutation({\n                variables: {\n                  \"id\": values.id,\n                  \"name\": values.name,\n                  \"info\": values.info,\n                  \"type\": item.type,\n                  \"cliente\": cookie.get('customer').id,\n                  \"clientid\": cid\n                }\n              });\n\n            case 10:\n              _addressData = _context.sent;\n\n              /* dispatch({ type: 'ADD_OR_UPDATE_ADDRESS', payload: addressValue });  */\n              closeModal();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: item && item.id ? 'Editar Dirección' : 'Agregar Nueva Dirección'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"Ingresa Titulo\",\n        error: touched.name && errors.name,\n        value: values.name,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"info\",\n        as: \"textarea\",\n        placeholder: \"Ingrese su Direcci\\xF3n\",\n        error: touched.info && errors.info,\n        value: values.info,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      type: \"submit\",\n      style: {\n        width: '100%',\n        height: '44px'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"savedAddressId\",\n        defaultMessage: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateAddress, \"cWo0ylatpsZTa+GVr6VmYDBcyL0=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = UpdateAddress;\nexport default _c2 = FormEnhancer(UpdateAddress);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateAddress\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/components/address-card/address-card.tsx"],"names":["React","useContext","Yup","withFormik","Form","closeModal","TextField","Button","useMutation","FieldWrapper","Heading","ProfileContext","FormattedMessage","UPDATE_ADDRESS","INSERT_ADDRESS","Cookies","cookie","FormEnhancer","mapPropsToValues","props","id","item","name","info","validationSchema","object","shape","string","required","handleSubmit","values","UpdateAddress","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","addressValue","type","get","cid","state","dispatch","addressMutation","data","addressInsertMutation","variables","addressData","width","height"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/client'; \nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\nimport { UPDATE_ADDRESS } from 'utils/graphql/mutation/address';\nimport { INSERT_ADDRESS } from 'utils/graphql/mutation/address';\nimport Cookies  from 'universal-cookie';\n\n// Shape of form values\ninterface FormValues {\n  id?: number | null;\n  name?: string;\n  info?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n}\nconst cookie = new Cookies()\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('El Título es un dato requerido!'),\n    info: Yup.string().required('La Dirección es Requerida'),\n  }),\n  handleSubmit: (values) => {\n \n    // do submitting things\n  },\n});\n\nconst UpdateAddress = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur, \n    handleReset,\n    isSubmitting,\n  } = props;\n  const addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info,\n  }; \n  const {cid} = cookie.get('cid');\n  const { state, dispatch } = useContext(ProfileContext);\n\n  const [addressMutation, { data }] = useMutation(UPDATE_ADDRESS);\n\n  const [addressInsertMutation] = useMutation(INSERT_ADDRESS); \n\n  const handleSubmit = async () => {\n    \n    if (isValid && item === 'add-address-modal') { \n      const addressData = await addressInsertMutation({\n          variables: { \n            \"name\": values.name,\n            \"info\": values.info,\n            \"type\": \"secondary\",\n            \"cliente\": cookie.get('customer').id,\n            \"clientid\": cid\n          },\n      });  \n      closeModal();\n    }else {\n      if (isValid) { \n        const addressData = await addressMutation({\n            variables: { \n              \"id\": values.id,\n              \"name\": values.name,\n              \"info\": values.info,  \n              \"type\": item.type,\n              \"cliente\": cookie.get('customer').id,\n              \"clientid\": cid\n            },\n        }); \n           /* dispatch({ type: 'ADD_OR_UPDATE_ADDRESS', payload: addressValue });  */\n        closeModal();\n      }\n    }\n\n\n\n  };\n  return (\n    <Form>\n      <Heading>{item && item.id ? 'Editar Dirección' : 'Agregar Nueva Dirección'}</Heading>\n      <FieldWrapper>\n        <TextField\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Ingresa Titulo\"\n          error={touched.name && errors.name}\n          value={values.name}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <FieldWrapper>\n        <TextField\n          id=\"info\"\n          as=\"textarea\"\n          placeholder=\"Ingrese su Dirección\"\n          error={touched.info && errors.info}\n          value={values.info}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"submit\"\n        style={{ width: '100%', height: '44px' }}\n      >\n        <FormattedMessage id=\"savedAddressId\" defaultMessage=\"Guardar\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(UpdateAddress);\n"]},"metadata":{},"sourceType":"module"}