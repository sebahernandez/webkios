{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/sebastian/space/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/sebastian/space/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/layouts/sidebar/sidebar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { FormattedMessage } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport Sticky from 'react-stickynode';\nimport { Scrollbar } from 'components/scrollbar/scrollbar';\nimport { useAppState } from 'contexts/app/app.provider';\nimport { SidebarMobileLoader, SidebarLoader } from 'components/placeholder/placeholder';\nimport { CategoryWrapper, TreeWrapper, PopoverWrapper, SidebarWrapper, RequestMedicine } from './sidebar.style';\nimport { TreeMenu } from 'components/tree-menu/tree-menu';\nimport { GET_CATEGORIES } from 'graphql/query/category.query';\nimport { REQUEST_MEDICINE_MENU_ITEM } from 'site-settings/site-navigation';\nimport CategoryWalker from 'components/category-walker/category-walker';\n\nvar SidebarCategory = function SidebarCategory(_ref) {\n  _s();\n\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop,\n      type = _ref.type;\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: {\n      type: type\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var pathname = router.pathname,\n      query = router.query;\n  var selectedQueries = query.category;\n\n  var onCategoryClick = function onCategoryClick(slug) {\n    var type = query.type,\n        rest = _objectWithoutProperties(query, [\"type\"]);\n\n    if (type) {\n      router.push({\n        pathname: pathname,\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          category: slug\n        })\n      }, {\n        pathname: \"/\".concat(type),\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          category: slug\n        })\n      });\n    } else {\n      router.push({\n        pathname: pathname,\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          category: slug\n        })\n      });\n    }\n  };\n\n  var isSidebarSticky = useAppState('isSidebarSticky');\n\n  if (!data || loading) {\n    if (mobile || tablet) {\n      return /*#__PURE__*/_jsxDEV(SidebarMobileLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SidebarLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CategoryWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(PopoverWrapper, {\n      children: /*#__PURE__*/_jsxDEV(CategoryWalker, {\n        children: [type === 'medicine' && /*#__PURE__*/_jsxDEV(Link, {\n          href: REQUEST_MEDICINE_MENU_ITEM.href,\n          children: /*#__PURE__*/_jsxDEV(RequestMedicine, {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: REQUEST_MEDICINE_MENU_ITEM.id,\n              defaultMessage: REQUEST_MEDICINE_MENU_ITEM.defaultMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(TreeMenu, {\n          data: data.categories,\n          onClick: onCategoryClick,\n          active: selectedQueries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(SidebarWrapper, {\n      style: {\n        paddingTop: type === 'medicine' ? 0 : 45\n      },\n      children: /*#__PURE__*/_jsxDEV(Sticky, {\n        enabled: isSidebarSticky,\n        top: type === 'medicine' ? 89 : 110,\n        children: [type === 'medicine' && /*#__PURE__*/_jsxDEV(Link, {\n          href: REQUEST_MEDICINE_MENU_ITEM.href,\n          children: /*#__PURE__*/_jsxDEV(RequestMedicine, {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: REQUEST_MEDICINE_MENU_ITEM.id,\n              defaultMessage: REQUEST_MEDICINE_MENU_ITEM.defaultMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          className: \"sidebar-scrollbar\",\n          children: /*#__PURE__*/_jsxDEV(TreeWrapper, {\n            children: /*#__PURE__*/_jsxDEV(TreeMenu, {\n              data: data.categories,\n              onClick: onCategoryClick,\n              active: selectedQueries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SidebarCategory, \"Pj671lLQEtgTzTtgUXIkx9+eRag=\", false, function () {\n  return [useRouter, useQuery, useAppState];\n});\n\n_c = SidebarCategory;\nexport default SidebarCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarCategory\");","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/layouts/sidebar/sidebar.tsx"],"names":["React","useRouter","Link","FormattedMessage","useQuery","Sticky","Scrollbar","useAppState","SidebarMobileLoader","SidebarLoader","CategoryWrapper","TreeWrapper","PopoverWrapper","SidebarWrapper","RequestMedicine","TreeMenu","GET_CATEGORIES","REQUEST_MEDICINE_MENU_ITEM","CategoryWalker","SidebarCategory","deviceType","mobile","tablet","desktop","type","router","variables","data","loading","pathname","query","selectedQueries","category","onCategoryClick","slug","rest","push","isSidebarSticky","href","id","defaultMessage","categories","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { FormattedMessage } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport Sticky from 'react-stickynode';\nimport { Scrollbar } from 'components/scrollbar/scrollbar';\nimport { useAppState } from 'contexts/app/app.provider';\nimport {\n  SidebarMobileLoader,\n  SidebarLoader,\n} from 'components/placeholder/placeholder';\nimport {\n  CategoryWrapper,\n  TreeWrapper,\n  PopoverWrapper,\n  SidebarWrapper,\n  RequestMedicine,\n} from './sidebar.style';\n\nimport { TreeMenu } from 'components/tree-menu/tree-menu';\nimport { GET_CATEGORIES } from 'graphql/query/category.query';\n\nimport { REQUEST_MEDICINE_MENU_ITEM } from 'site-settings/site-navigation';\nimport CategoryWalker from 'components/category-walker/category-walker';\n\ntype SidebarCategoryProps = {\n  deviceType: {\n    mobile: string;\n    tablet: string;\n    desktop: boolean;\n  };\n  type: string;\n};\n\nconst SidebarCategory: React.FC<SidebarCategoryProps> = ({\n  deviceType: { mobile, tablet, desktop },\n  type,\n}) => {\n  const router = useRouter();\n  const { data, loading } = useQuery(GET_CATEGORIES, {\n    variables: { type },\n  });\n  const { pathname, query } = router;\n  const selectedQueries = query.category;\n\n  const onCategoryClick = (slug: string) => {\n    const { type, ...rest } = query;\n    if (type) {\n      router.push(\n        {\n          pathname,\n          query: { ...rest, category: slug },\n        },\n        {\n          pathname: `/${type}`,\n          query: { ...rest, category: slug },\n        }\n      );\n    } else {\n      router.push({\n        pathname,\n        query: { ...rest, category: slug },\n      });\n    }\n  };\n  const isSidebarSticky = useAppState('isSidebarSticky');\n\n  if (!data || loading) {\n    if (mobile || tablet) {\n      return <SidebarMobileLoader />;\n    }\n    return <SidebarLoader />;\n  }\n  return (\n    <CategoryWrapper>\n      <PopoverWrapper>\n        <CategoryWalker>\n          {type === 'medicine' && (\n            <Link href={REQUEST_MEDICINE_MENU_ITEM.href}>\n              <RequestMedicine>\n                <FormattedMessage\n                  id={REQUEST_MEDICINE_MENU_ITEM.id}\n                  defaultMessage={REQUEST_MEDICINE_MENU_ITEM.defaultMessage}\n                />\n              </RequestMedicine>\n            </Link>\n          )}\n          <TreeMenu\n            data={data.categories}\n            onClick={onCategoryClick}\n            active={selectedQueries}\n          />\n        </CategoryWalker>\n      </PopoverWrapper>\n\n      <SidebarWrapper style={{ paddingTop: type === 'medicine' ? 0 : 45 }}>\n        <Sticky enabled={isSidebarSticky} top={type === 'medicine' ? 89 : 110}>\n          {type === 'medicine' && (\n            <Link href={REQUEST_MEDICINE_MENU_ITEM.href}>\n              <RequestMedicine>\n                <FormattedMessage\n                  id={REQUEST_MEDICINE_MENU_ITEM.id}\n                  defaultMessage={REQUEST_MEDICINE_MENU_ITEM.defaultMessage}\n                />\n              </RequestMedicine>\n            </Link>\n          )}\n\n          <Scrollbar className=\"sidebar-scrollbar\">\n            <TreeWrapper>\n              <TreeMenu\n                data={data.categories}\n                onClick={onCategoryClick}\n                active={selectedQueries}\n              />\n            </TreeWrapper>\n          </Scrollbar>\n        </Sticky>\n      </SidebarWrapper>\n    </CategoryWrapper>\n  );\n};\n\nexport default SidebarCategory;\n"]},"metadata":{},"sourceType":"module"}