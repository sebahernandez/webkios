{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/layouts/header/menu/auth-menu.tsx\";\nimport React from 'react';\nimport { Button } from 'components/button/button';\nimport { FormattedMessage } from 'react-intl';\nimport Popover from 'components/popover/popover';\nimport { AuthorizedMenu } from './authorized-menu';\n\nconst AuthMenu = ({\n  isAuthenticated,\n  onJoin,\n  onLogout,\n  avatar\n}) => {\n  let image;\n  let nombre;\n  let user = null; //JSON.parse(localStorage.getItem('user_logged'))\n\n  let access_token = JSON.parse(localStorage.getItem('access_token'));\n\n  if (user && access_token) {\n    if (access_token.providerId && access_token.providerId === 'google.com') {\n      image = user.photoURL;\n      nombre = user.displayName;\n    } else {\n      image = user.imageURL;\n      nombre = user.nombre;\n    }\n  }\n\n  return !isAuthenticated ? /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"primary\",\n    onClick: onJoin,\n    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n      id: \"joinButton\",\n      defaultMessage: \"join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Popover, {\n    direction: \"right\",\n    className: \"user-pages-dropdown\",\n    handler: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: user && image === null ? avatar : image,\n      alt: user && nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this),\n    content: /*#__PURE__*/_jsxDEV(AuthorizedMenu, {\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AuthMenu;","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/layouts/header/menu/auth-menu.tsx"],"names":["React","Button","FormattedMessage","Popover","AuthorizedMenu","AuthMenu","isAuthenticated","onJoin","onLogout","avatar","image","nombre","user","access_token","JSON","parse","localStorage","getItem","providerId","photoURL","displayName","imageURL"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AASA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA,QAA3B;AAAqCC,EAAAA;AAArC,CAAD,KAA0D;AACzE,MAAIC,KAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,IAAI,GAAG,IAAX,CAHyE,CAIzE;;AACA,MAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAnB;;AAEA,MAAGL,IAAI,IAAIC,YAAX,EAAyB;AACvB,QAAGA,YAAY,CAACK,UAAb,IACCL,YAAY,CAACK,UAAb,KAA4B,YADhC,EAEA;AACER,MAAAA,KAAK,GAAGE,IAAI,CAACO,QAAb;AACAR,MAAAA,MAAM,GAAGC,IAAI,CAACQ,WAAd;AACD,KALD,MAKO;AAEHV,MAAAA,KAAK,GAAGE,IAAI,CAACS,QAAb;AACAV,MAAAA,MAAM,GAAGC,IAAI,CAACD,MAAd;AACH;AACF;;AAED,SAAO,CAACL,eAAD,gBACL,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEC,MAAnC;AAAA,2BACE,QAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,YAArB;AAAkC,MAAA,cAAc,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,gBAKL,QAAC,OAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,OAAO,eAAE;AAAK,MAAA,GAAG,EAAEK,IAAI,IAAIF,KAAK,KAAK,IAAlB,GAAyBD,MAAzB,GAAiCC,KAA3C;AAAkD,MAAA,GAAG,EAAEE,IAAI,IAAID;AAA/D;AAAA;AAAA;AAAA;AAAA,YAHX;AAIE,IAAA,OAAO,eAAE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEH;AAA1B;AAAA;AAAA;AAAA;AAAA;AAJX;AAAA;AAAA;AAAA;AAAA,UALF;AAYD,CAhCD;;AAiCA,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport { Button } from 'components/button/button';\nimport { FormattedMessage } from 'react-intl';\nimport Popover from 'components/popover/popover';\nimport { AuthorizedMenu } from './authorized-menu';\n\ninterface Props {\n  isAuthenticated: boolean;\n  onJoin: () => void;\n  onLogout: () => void;\n  avatar: string;\n}\n \nconst AuthMenu = ({ isAuthenticated, onJoin, onLogout, avatar }: Props) => {\n  let image;\n  let nombre;\n  let user = null;\n  //JSON.parse(localStorage.getItem('user_logged'))\n  let access_token = JSON.parse(localStorage.getItem('access_token'))\n\n  if(user && access_token) { \n    if(access_token.providerId \n    &&  access_token.providerId === 'google.com')\n    {\n      image = user.photoURL;\n      nombre = user.displayName;\n    } else {\n\n        image = user.imageURL;\n        nombre = user.nombre;\n    }\n  }\n\n  return !isAuthenticated ? (\n    <Button variant=\"primary\" onClick={onJoin}>\n      <FormattedMessage id=\"joinButton\" defaultMessage=\"join\" />\n    </Button>\n  ) : (\n    <Popover\n      direction=\"right\"\n      className=\"user-pages-dropdown\"\n      handler={<img src={user && image === null ? avatar: image} alt={user && nombre} />}\n      content={<AuthorizedMenu onLogout={onLogout} />}\n    />\n  );\n};\nexport default AuthMenu;\n"]},"metadata":{},"sourceType":"module"}