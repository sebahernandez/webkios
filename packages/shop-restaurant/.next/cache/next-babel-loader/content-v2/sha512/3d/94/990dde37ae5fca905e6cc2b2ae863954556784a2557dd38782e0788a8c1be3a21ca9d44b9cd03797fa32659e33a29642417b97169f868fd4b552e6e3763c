{"ast":null,"code":"import _defineProperty from \"/Users/sebastian/space/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/sebastian/space/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/components/type-nav/type-nav-card.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport css from '@styled-system/css';\nimport { FormattedMessage } from 'react-intl';\nexport var Icon = styled.span.withConfig({\n  displayName: \"type-nav-card__Icon\",\n  componentId: \"sc-1sjf3ep-0\"\n})(css({\n  display: 'flex',\n  marginBottom: '10px',\n  svg: {\n    minWidth: '15px',\n    maxWidth: '21px',\n    maxHeight: '21px'\n  }\n}));\n_c = Icon;\nexport var Text = styled.span.withConfig({\n  displayName: \"type-nav-card__Text\",\n  componentId: \"sc-1sjf3ep-1\"\n})(css({\n  fontSize: 'sm',\n  fontWeight: 'medium',\n  textAlign: 'center',\n  textTransform: 'capitalize'\n}));\n_c2 = Text;\nexport var IconWrapper = styled.button.withConfig({\n  displayName: \"type-nav-card__IconWrapper\",\n  componentId: \"sc-1sjf3ep-2\"\n})(_c3 = function _c3(props) {\n  return css({\n    width: '100%',\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: props.active === true ? 'primary.regular' : 'gray.100',\n    borderRadius: 'base',\n    border: 0,\n    outline: 'none',\n    boxShadow: 'none',\n    cursor: 'pointer',\n    ':focus': {\n      border: 0,\n      outline: 'none',\n      boxShadow: 'none'\n    },\n    span: {\n      color: props.active === true ? 'white' : 'text.bold'\n    }\n  });\n});\n_c4 = IconWrapper;\n\nvar IconNavCard = function IconNavCard(_ref) {\n  var icon = _ref.icon,\n      intlId = _ref.intlId,\n      defaultMessage = _ref.defaultMessage,\n      active = _ref.active,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"icon\", \"intlId\", \"defaultMessage\", \"active\", \"onClick\"]);\n\n  return /*#__PURE__*/_jsxDEV(IconWrapper, _objectSpread(_objectSpread({\n    active: active\n  }, props), {}, {\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Text, {\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: intlId,\n        defaultMessage: defaultMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, _this);\n};\n\n_c5 = IconNavCard;\nexport default IconNavCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Icon\");\n$RefreshReg$(_c2, \"Text\");\n$RefreshReg$(_c3, \"IconWrapper$styled.button\");\n$RefreshReg$(_c4, \"IconWrapper\");\n$RefreshReg$(_c5, \"IconNavCard\");","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/components/type-nav/type-nav-card.tsx"],"names":["React","styled","css","FormattedMessage","Icon","span","display","marginBottom","svg","minWidth","maxWidth","maxHeight","Text","fontSize","fontWeight","textAlign","textTransform","IconWrapper","button","props","width","padding","flexDirection","alignItems","justifyContent","backgroundColor","active","borderRadius","border","outline","boxShadow","cursor","color","IconNavCard","icon","intlId","defaultMessage","onClick"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAO,IAAMC,IAAI,GAAGH,MAAM,CAACI,IAAV;AAAA;AAAA;AAAA,GACfH,GAAG,CAAC;AACFI,EAAAA,OAAO,EAAE,MADP;AAEFC,EAAAA,YAAY,EAAE,MAFZ;AAIFC,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE,MADP;AAEHC,IAAAA,QAAQ,EAAE,MAFP;AAGHC,IAAAA,SAAS,EAAE;AAHR;AAJH,CAAD,CADY,CAAV;KAAMP,I;AAab,OAAO,IAAMQ,IAAI,GAAGX,MAAM,CAACI,IAAV;AAAA;AAAA;AAAA,GACfH,GAAG,CAAC;AACFW,EAAAA,QAAQ,EAAE,IADR;AAEFC,EAAAA,UAAU,EAAE,QAFV;AAGFC,EAAAA,SAAS,EAAE,QAHT;AAIFC,EAAAA,aAAa,EAAE;AAJb,CAAD,CADY,CAAV;MAAMJ,I;AASb,OAAO,IAAMK,WAAW,GAAGhB,MAAM,CAACiB,MAAV;AAAA;AAAA;AAAA,SAAsB,aAACC,KAAD;AAAA,SAC5CjB,GAAG,CAAC;AACFkB,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,OAAO,EAAE,MAFP;AAGFf,IAAAA,OAAO,EAAE,MAHP;AAIFgB,IAAAA,aAAa,EAAE,QAJb;AAKFC,IAAAA,UAAU,EAAE,QALV;AAMFC,IAAAA,cAAc,EAAE,QANd;AAOFC,IAAAA,eAAe,EAAEN,KAAK,CAACO,MAAN,KAAiB,IAAjB,GAAwB,iBAAxB,GAA4C,UAP3D;AAQFC,IAAAA,YAAY,EAAE,MARZ;AASFC,IAAAA,MAAM,EAAE,CATN;AAUFC,IAAAA,OAAO,EAAE,MAVP;AAWFC,IAAAA,SAAS,EAAE,MAXT;AAYFC,IAAAA,MAAM,EAAE,SAZN;AAcF,cAAU;AACRH,MAAAA,MAAM,EAAE,CADA;AAERC,MAAAA,OAAO,EAAE,MAFD;AAGRC,MAAAA,SAAS,EAAE;AAHH,KAdR;AAoBFzB,IAAAA,IAAI,EAAE;AACJ2B,MAAAA,KAAK,EAAEb,KAAK,CAACO,MAAN,KAAiB,IAAjB,GAAwB,OAAxB,GAAkC;AADrC;AApBJ,GAAD,CADyC;AAAA,CAAtB,CAAjB;MAAMT,W;;AAmCb,IAAMgB,WAAuC,GAAG,SAA1CA,WAA0C,OAO1C;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,cAII,QAJJA,cAII;AAAA,MAHJV,MAGI,QAHJA,MAGI;AAAA,MAFJW,OAEI,QAFJA,OAEI;AAAA,MADDlB,KACC;;AACJ,sBACE,QAAC,WAAD;AAAa,IAAA,MAAM,EAAEO;AAArB,KAAiCP,KAAjC;AAAwC,IAAA,OAAO,EAAEkB,OAAjD;AAAA,4BACE,QAAC,IAAD;AAAA,gBAAOH;AAAP;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,IAAD;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAEC,MAAtB;AAA8B,QAAA,cAAc,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAhBD;;MAAMH,W;AAkBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport css from '@styled-system/css';\nimport { FormattedMessage } from 'react-intl';\n\nexport const Icon = styled.span(\n  css({\n    display: 'flex',\n    marginBottom: '10px',\n\n    svg: {\n      minWidth: '15px',\n      maxWidth: '21px',\n      maxHeight: '21px',\n    },\n  })\n);\n\nexport const Text = styled.span(\n  css({\n    fontSize: 'sm',\n    fontWeight: 'medium',\n    textAlign: 'center',\n    textTransform: 'capitalize',\n  })\n);\n\nexport const IconWrapper = styled.button<any>((props) =>\n  css({\n    width: '100%',\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: props.active === true ? 'primary.regular' : 'gray.100',\n    borderRadius: 'base',\n    border: 0,\n    outline: 'none',\n    boxShadow: 'none',\n    cursor: 'pointer',\n\n    ':focus': {\n      border: 0,\n      outline: 'none',\n      boxShadow: 'none',\n    },\n\n    span: {\n      color: props.active === true ? 'white' : 'text.bold',\n    },\n  })\n);\n\ntype IconNavCardProps = {\n  icon?: any;\n  intlId?: string;\n  defaultMessage?: string;\n  active?: boolean;\n  onClick?: (e: any) => void;\n};\n\nconst IconNavCard: React.FC<IconNavCardProps> = ({\n  icon,\n  intlId,\n  defaultMessage,\n  active,\n  onClick,\n  ...props\n}) => {\n  return (\n    <IconWrapper active={active} {...props} onClick={onClick}>\n      <Icon>{icon}</Icon>\n      <Text>\n        <FormattedMessage id={intlId} defaultMessage={defaultMessage} />\n      </Text>\n    </IconWrapper>\n  );\n};\n\nexport default IconNavCard;\n"]},"metadata":{},"sourceType":"module"}