{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// product card for general\nimport dynamic from 'next/dynamic';\nimport React from 'react';\nimport Image from 'components/image/image';\nimport { Button } from 'components/button/button';\nimport { ProductCardWrapper, ProductImageWrapper, ProductInfo, DiscountPercent, ButtonText } from '../product-card.style';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { Counter } from 'components/counter/counter';\nimport { cartAnimation } from 'utils/cart-animation';\nimport { FormattedMessage } from 'react-intl';\nimport { CartIcon } from 'assets/icons/CartIcon';\nimport { useModal } from 'contexts/modal/use-modal';\nimport { useRouter } from 'next/router';\nconst QuickViewMobile = dynamic(() => import('features/quick-view/quick-view-mobile'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('features/quick-view/quick-view-mobile')],\n    modules: [\"../components/product-card/product-card-one/product-card-one.tsx -> \" + 'features/quick-view/quick-view-mobile']\n  }\n});\n\nconst ProductCard = (_ref) => {\n  let {\n    title,\n    image,\n    gallery,\n    weight,\n    price,\n    salePrice,\n    discountInPercent,\n    cartProducts,\n    addToCart,\n    updateCart,\n    value,\n    currency,\n    onChange,\n    increment,\n    decrement,\n    data,\n    deviceType\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"gallery\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\"]);\n\n  const router = useRouter(); // modal del producto\n\n  const [showModal, hideModal] = useModal(() => /*#__PURE__*/_jsx(QuickViewMobile, {\n    modalProps: data,\n    hideModal: hideModal,\n    deviceType: deviceType\n  }), {\n    onClose: () => {\n      const {\n        pathname,\n        query,\n        asPath\n      } = router;\n      const as = asPath;\n      router.push({\n        pathname,\n        query\n      }, as, {\n        shallow: true\n      });\n    }\n  });\n  const {\n    addItem,\n    removeItem,\n    getItem,\n    isInCart\n  } = useCart();\n\n  const handleAddClick = e => {\n    e.stopPropagation();\n    addItem(data);\n\n    if (!isInCart(data.id)) {\n      cartAnimation(e);\n    }\n  };\n\n  const handleRemoveClick = e => {\n    e.stopPropagation();\n    removeItem(data);\n  };\n\n  const handleQuickViewModal = () => {\n    const {\n      pathname,\n      query\n    } = router;\n    const as = `/product/${data.slug}`;\n\n    if (pathname === '/product/[slug]') {\n      router.push(pathname, as);\n\n      if (false) {\n        window.scrollTo(0, 0);\n      }\n\n      return;\n    }\n\n    showModal();\n    router.push({\n      pathname,\n      query\n    }, {\n      pathname: as\n    }, {\n      shallow: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(ProductCardWrapper, {\n    onClick: handleQuickViewModal,\n    className: \"product-card\",\n    children: [/*#__PURE__*/_jsxs(ProductImageWrapper, {\n      children: [/*#__PURE__*/_jsx(Image, {\n        url: image,\n        className: \"product-image\",\n        style: {\n          position: 'relative'\n        },\n        alt: title\n      }), discountInPercent ? /*#__PURE__*/_jsxs(DiscountPercent, {\n        children: [discountInPercent, \"%\"]\n      }) : null]\n    }), /*#__PURE__*/_jsxs(ProductInfo, {\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        className: \"product-title\",\n        children: title\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"product-weight\",\n        children: weight\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"product-meta\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"productPriceWrapper\",\n          children: [discountInPercent ? /*#__PURE__*/_jsxs(\"span\", {\n            className: \"discountedPrice\",\n            children: [currency, price]\n          }) : null, /*#__PURE__*/_jsxs(\"span\", {\n            className: \"product-price\",\n            children: [currency, salePrice ? salePrice : price]\n          })]\n        }), !isInCart(data.id) ? /*#__PURE__*/_jsxs(Button, {\n          className: \"cart-button\",\n          variant: \"secondary\",\n          borderRadius: 100,\n          onClick: handleAddClick,\n          children: [/*#__PURE__*/_jsx(CartIcon, {\n            mr: 2\n          }), /*#__PURE__*/_jsx(ButtonText, {\n            children: /*#__PURE__*/_jsx(FormattedMessage, {\n              id: \"addCartButton\",\n              defaultMessage: \"Cart\"\n            })\n          })]\n        }) : /*#__PURE__*/_jsx(Counter, {\n          value: getItem(data.id).quantity,\n          onDecrement: handleRemoveClick,\n          onIncrement: handleAddClick,\n          className: \"card-counter\"\n        })]\n      })]\n    })]\n  });\n};\n\nexport default ProductCard;","map":null,"metadata":{},"sourceType":"module"}