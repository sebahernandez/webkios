{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/alejandrosandoval/space/world_eserp/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alejandrosandoval/space/world_eserp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/alejandrosandoval/space/world_eserp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/features/authentication-form/login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { LinkButton, Button, IconWrapper, Wrapper, Container, Heading, SubHeading, OfferSection, Offer // Input,\n, Divider } from './authentication-form.style';\nimport { Google } from 'assets/icons/google';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Input } from 'components/forms/input';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_CLIENTE_USERNAME, GET_CLIENTE_USERNAME_PASSWORD } from '../../utils/graphql/query/clients.query';\nimport { SET_CLIENTE } from '../../utils/graphql/mutation/register_client';\nimport { ADD_VISITA } from '../../utils/graphql/mutation/visitas';\nimport app from '../../../src/base';\nexport default function SignInModal(_ref) {\n  _s();\n\n  var cid = _ref.cid;\n  var intl = useIntl();\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var _useMutation = useMutation(ADD_VISITA),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addVisita = _useMutation2[0];\n\n  var _useMutation3 = useMutation(SET_CLIENTE),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      setCliente = _useMutation4[0];\n\n  var _useQuery = useQuery(GET_CLIENTE_USERNAME_PASSWORD, {\n    variables: {\n      clientid: cid,\n      username: email,\n      password: password\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useQuery2 = useQuery(GET_CLIENTE_USERNAME, {\n    variables: {\n      clientid: cid,\n      username: email\n    }\n  }),\n      data1 = _useQuery2.data;\n\n  var toggleSignUpForm = function toggleSignUpForm() {\n    authDispatch({\n      type: 'SIGNUP'\n    });\n  };\n\n  var toggleForgotPassForm = function toggleForgotPassForm() {\n    authDispatch({\n      type: 'FORGOTPASS'\n    });\n  };\n\n  var loginCallback = function loginCallback() {\n    console.log('data...:', JSON.stringify(data)); // validamos username y password\n\n    if (data && data.cliente.length > 0) {\n      console.log('usuario Encontrado');\n      addVisita({\n        variables: {\n          cliente: data.cliente[0].id,\n          clientid: cid\n        }\n      });\n\n      if (true) {\n        localStorage.setItem('access_token', \"\".concat(data.cliente[0].last_seen));\n        localStorage.setItem('user_logged', JSON.stringify(data.cliente[0]));\n        authDispatch({\n          type: 'SIGNIN_SUCCESS'\n        });\n        closeModal();\n      }\n    } else {\n      console.log('usuario NO existe');\n      alert('usuario no encontrado');\n    }\n  };\n\n  var loginGoogleCall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('ingresando google connect');\n              app.auth().signInWithPopup(app.auth.GoogleAuthProvider.PROVIDER_ID).then(function (result) {\n                /** @type {firebase.auth.OAuthCredential} */\n                var credential = result.credential;\n                console.log('ingresando google connect inside'); // This gives you a Google Access Token. You can use it to access the Google API.\n                //var token = credential.accessToken;\n                // The signed-in user info.\n\n                var user = result.user;\n                localStorage.setItem('access_token', JSON.stringify(credential));\n                console.log('::::::::::', 'cid', cid, 'email', user.email, 'imageURL', user.photoURL, 'nombre', user.displayName);\n                var ret = setCliente({\n                  variables: {\n                    clientid: cid,\n                    email: user.email,\n                    imageURL: user.photoURL,\n                    nombre: user.displayName\n                  }\n                });\n                setEmail(user.email);\n                localStorage.setItem('user_logged', JSON.stringify(data1.cliente[0]));\n                console.log('return setClient: ' + JSON.stringify(ret));\n                authDispatch({\n                  type: 'SIGNIN_SUCCESS'\n                });\n                closeModal(); // ...\n              })[\"catch\"](function (error) {\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message; // The email of the user's account used.\n\n                var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n                var credential = error.credential;\n                console.log(errorCode, errorMessage); // ...\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loginGoogleCall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"welcomeBack\",\n          defaultMessage: \"Welcome Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubHeading, {\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"loginText\",\n          defaultMessage: \"Login with your email & password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: loginCallback,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          placeholder: intl.formatMessage({\n            id: 'emailAddressPlaceholder',\n            defaultMessage: 'Email Address.'\n          }),\n          value: email,\n          onChange: function onChange(e) {\n            return setEmail(e.target.value);\n          },\n          required: true,\n          height: \"48px\",\n          backgroundColor: \"#F7F7F7\",\n          mb: \"10px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: intl.formatMessage({\n            id: 'passwordPlaceholder',\n            defaultMessage: 'Password (min 6 characters)'\n          }),\n          value: password,\n          onChange: function onChange(e) {\n            return setPassword(e.target.value);\n          },\n          required: true,\n          height: \"48px\",\n          backgroundColor: \"#F7F7F7\",\n          mb: \"10px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"big\",\n          style: {\n            width: '100%'\n          },\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"continueBtn\",\n            defaultMessage: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"orText\",\n            defaultMessage: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        size: \"big\",\n        style: {\n          width: '100%',\n          backgroundColor: '#ee1111'\n        },\n        onClick: loginGoogleCall,\n        children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Google, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"continueGoogleBtn\",\n          defaultMessage: \"Continue with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offer, {\n        style: {\n          padding: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"dontHaveAccount\",\n          defaultMessage: \"Don't have any account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(LinkButton, {\n          onClick: toggleSignUpForm,\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"signUpBtnText\",\n            defaultMessage: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OfferSection, {\n      children: /*#__PURE__*/_jsxDEV(Offer, {\n        children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"forgotPasswordText\",\n          defaultMessage: \"Forgot your password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(LinkButton, {\n          onClick: toggleForgotPassForm,\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"resetText\",\n            defaultMessage: \"Reset It\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignInModal, \"KxlHZ4e99hVdcnNtsqa1q7c0idc=\", false, function () {\n  return [useIntl, useMutation, useMutation, useQuery, useQuery];\n});\n\n_c = SignInModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInModal\");","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/features/authentication-form/login.tsx"],"names":["React","useContext","LinkButton","Button","IconWrapper","Wrapper","Container","Heading","SubHeading","OfferSection","Offer","Divider","Google","AuthContext","FormattedMessage","useIntl","closeModal","Input","useQuery","useMutation","GET_CLIENTE_USERNAME","GET_CLIENTE_USERNAME_PASSWORD","SET_CLIENTE","ADD_VISITA","app","SignInModal","cid","intl","authDispatch","useState","id","setId","email","setEmail","password","setPassword","addVisita","setCliente","variables","clientid","username","data","error","loading","data1","toggleSignUpForm","type","toggleForgotPassForm","loginCallback","console","log","JSON","stringify","cliente","length","localStorage","setItem","last_seen","alert","loginGoogleCall","auth","signInWithPopup","GoogleAuthProvider","PROVIDER_ID","then","result","credential","user","photoURL","displayName","ret","imageURL","nombre","errorCode","code","errorMessage","message","formatMessage","defaultMessage","e","target","value","width","backgroundColor","padding"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport {\n  LinkButton,\n  Button,\n  IconWrapper,\n  Wrapper,\n  Container,\n  LogoWrapper,\n  Heading,\n  SubHeading,\n  OfferSection,\n  Offer,\n  // Input,\n  Divider,\n} from './authentication-form.style'; \nimport { Facebook } from 'assets/icons/facebook';\nimport { Google } from 'assets/icons/google';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { closeModal } from '@redq/reuse-modal';\nimport { Input } from 'components/forms/input';\nimport { useQuery,useMutation, NetworkStatus } from '@apollo/client';\nimport { GET_CLIENTE_USERNAME, GET_CLIENTE_USERNAME_PASSWORD } from '../../utils/graphql/query/clients.query';\nimport { SET_CLIENTE } from '../../utils/graphql/mutation/register_client';\nimport { ADD_VISITA } from '../../utils/graphql/mutation/visitas';\nimport app from '../../../src/base';\n\n\n\nexport default function SignInModal({cid}) {\n \n  const intl = useIntl();\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [id, setId] = React.useState(0);\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [addVisita] = useMutation(ADD_VISITA ); \n  const [setCliente] = useMutation(SET_CLIENTE ); \n  const { data, error,loading } =  useQuery(\n    GET_CLIENTE_USERNAME_PASSWORD,\n    {\n      variables: {\n        clientid: cid,\n        username: email,\n        password: password\n      } \n    }\n  ); \n  const { data:data1 } =  useQuery(\n    GET_CLIENTE_USERNAME,\n    {\n      variables: {\n        clientid: cid,\n        username: email \n      } \n    }\n  ); \n  \n\n  const toggleSignUpForm = () => {\n    authDispatch({\n      type: 'SIGNUP',\n    });\n  };\n\n  const toggleForgotPassForm = () => {\n    authDispatch({\n      type: 'FORGOTPASS',\n    });\n  };\n\n  const loginCallback = () => {\n    console.log('data...:',JSON.stringify(data))\n    // validamos username y password\n    if(data && data.cliente.length > 0){\n      console.log('usuario Encontrado')\n      addVisita({\n        variables: {\n                  cliente: data.cliente[0].id, \n                  clientid: cid\n                }\n      });\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('access_token', `${data.cliente[0].last_seen}`);\n        localStorage.setItem('user_logged', JSON.stringify(data.cliente[0])); \n        \n        authDispatch({ type: 'SIGNIN_SUCCESS' });\n        closeModal();\n      }\n    } else {\n      console.log('usuario NO existe');\n      alert('usuario no encontrado');\n    }\n\n    \n  };\n\n  const loginGoogleCall = async () => {\n     \n      console.log('ingresando google connect')\n      \n\n      app.auth()\n      .signInWithPopup(app.auth.GoogleAuthProvider.PROVIDER_ID)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n        console.log('ingresando google connect inside')\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        //var token = credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n       \n        localStorage.setItem('access_token', JSON.stringify(credential));\n        console.log('::::::::::','cid',cid,'email',user.email,'imageURL',user.photoURL,'nombre',user.displayName)\n        const ret =  setCliente({\n          variables: {\n                    clientid: cid,\n                    email: user.email, \n                    imageURL: user.photoURL, \n                    nombre: user.displayName                    \n                  }\n        });\n        setEmail(user.email)\n        localStorage.setItem('user_logged', JSON.stringify(data1.cliente[0])); \n\n        console.log('return setClient: ' + JSON.stringify(ret))\n       \n        authDispatch({ type: 'SIGNIN_SUCCESS' });\n        closeModal();\n        // ...\n      }).catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        console.log(errorCode,errorMessage)\n        // ...\n      });\n    \n\n  } \n  return (\n    <Wrapper>\n      <Container>\n        <Heading>\n          <FormattedMessage id='welcomeBack' defaultMessage='Welcome Back' />\n        </Heading>\n\n        <SubHeading>\n          <FormattedMessage\n            id='loginText'\n            defaultMessage='Login with your email &amp; password'\n          />\n        </SubHeading>\n        <form onSubmit={loginCallback}>\n          <Input\n            type='email'\n            placeholder={intl.formatMessage({\n              id: 'emailAddressPlaceholder',\n              defaultMessage: 'Email Address.',\n            })}\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            height='48px'\n            backgroundColor='#F7F7F7'\n            mb='10px'\n          />\n\n          <Input\n            type='password'\n            placeholder={intl.formatMessage({\n              id: 'passwordPlaceholder',\n              defaultMessage: 'Password (min 6 characters)',\n            })}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            height='48px'\n            backgroundColor='#F7F7F7'\n            mb='10px'\n          />\n\n          <Button\n            variant='primary'\n            size='big'\n            style={{ width: '100%' }}\n            type='submit'\n          >\n            <FormattedMessage id='continueBtn' defaultMessage='Continue' />\n          </Button>\n        </form>\n        <Divider>\n          <span>\n            <FormattedMessage id='orText' defaultMessage='or' />\n          </span>\n        </Divider>\n{/* \n        <Button\n          variant='primary'\n          size='big'\n          style={{\n            width: '100%',\n            backgroundColor: '#4267b2',\n            marginBottom: 10,\n          }}\n          onClick={loginCallback}\n        >\n          <IconWrapper>\n            <Facebook />\n          </IconWrapper>\n          <FormattedMessage\n            id='continueFacebookBtn'\n            defaultMessage='Continue with Facebook'\n          />\n        </Button> */}\n\n        <Button\n          variant='primary'\n          size='big'\n          style={{ width: '100%', backgroundColor: '#ee1111' }}\n          onClick={loginGoogleCall}\n        >\n          <IconWrapper>\n            <Google />\n          </IconWrapper>\n          <FormattedMessage\n            id='continueGoogleBtn'\n            defaultMessage='Continue with Google'\n          />\n        </Button>\n\n        <Offer style={{ padding: '20px 0' }}>\n          <FormattedMessage\n            id='dontHaveAccount'\n            defaultMessage=\"Don't have any account?\"\n          />{' '}\n          <LinkButton onClick={toggleSignUpForm}>\n            <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n          </LinkButton>\n        </Offer>\n      </Container>\n\n      <OfferSection>\n        <Offer>\n          <FormattedMessage\n            id='forgotPasswordText'\n            defaultMessage='Forgot your password?'\n          />{' '}\n          <LinkButton onClick={toggleForgotPassForm}>\n            <FormattedMessage id='resetText' defaultMessage='Reset It' />\n          </LinkButton>\n        </Offer>\n      </OfferSection>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}