{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/features/authentication-form/register.tsx\";\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { Input } from 'components/forms/input';\nimport { Button, Wrapper, Container, Heading, SubHeading, HelperText, Offer // Input,\n, LinkButton } from './authentication-form.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_CLIENTE_USERNAME } from '../../utils/graphql/query/clients.query';\nimport { ADD_CLIENTE } from '../../utils/graphql/mutation/register_client';\nimport SignInModal from './login';\nexport default function SignOutModal({\n  cid\n}) {\n  const intl = useIntl();\n  const [name, setName] = React.useState('');\n  const [lastName, setLastName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const [addCliente, error] = useMutation(ADD_CLIENTE);\n  const {\n    data,\n    loading\n  } = useQuery(GET_CLIENTE_USERNAME, {\n    variables: {\n      clientid: cid,\n      username: email\n    }\n  });\n\n  const toggleSignInForm = () => {\n    /*  authDispatch({\n       type: 'SIGNIN',\n     }); */\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: SignInModal,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 558,\n        height: 'auto'\n      }\n    });\n  };\n\n  const handleSubmit = async () => {\n    if (data && data.cliente.length > 0) {\n      console.log('usuario YA existe');\n      alert('usuario YA existe');\n    } else {\n      console.log('usuario NO existe');\n      await addCliente({\n        variables: {\n          password: password,\n          username: email,\n          clientid: cid\n        }\n      });\n\n      if (error) {\n        console.log('hubo un error', error);\n      }\n\n      alert('grabó exitósamente');\n      authDispatch({\n        type: 'SIGNIN'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"signUpBtnText\",\n          defaultMessage: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubHeading, {\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"signUpText\",\n          defaultMessage: \"Every fill is required in sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: intl.formatMessage({\n          id: 'profileNameField',\n          defaultMessage: 'Nombre'\n        }),\n        onChange: e => setName(e.target.value),\n        required: true,\n        height: \"48px\",\n        backgroundColor: \"#F7F7F7\",\n        mb: \"10px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: intl.formatMessage({\n          id: 'profileLastNameField',\n          defaultMessage: 'Apellido'\n        }),\n        onChange: e => setLastName(e.target.value),\n        required: true,\n        height: \"48px\",\n        backgroundColor: \"#F7F7F7\",\n        mb: \"10px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: intl.formatMessage({\n          id: 'emailAddressPlaceholder',\n          defaultMessage: 'Dirección de correo electrónico o Teléfono de contacto'\n        }),\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        height: \"48px\",\n        backgroundColor: \"#F7F7F7\",\n        mb: \"10px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: intl.formatMessage({\n          id: 'passwordPlaceholder',\n          defaultMessage: 'Password (min 6 characters)'\n        }),\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        height: \"48px\",\n        backgroundColor: \"#F7F7F7\",\n        mb: \"10px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HelperText, {\n        style: {\n          padding: '20px 0 30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"signUpText\",\n          defaultMessage: \"By signing up, you agree to Pickbazar's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"termsConditionText\",\n              defaultMessage: \"Terms & Condition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        size: \"big\",\n        width: \"100%\",\n        onClick: handleSubmit,\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"saved\",\n          defaultMessage: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offer, {\n        style: {\n          padding: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"alreadyHaveAccount\",\n          defaultMessage: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(LinkButton, {\n          onClick: toggleSignInForm,\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"loginBtnText\",\n            defaultMessage: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/features/authentication-form/register.tsx"],"names":["React","useContext","Link","Input","Button","Wrapper","Container","Heading","SubHeading","HelperText","Offer","LinkButton","openModal","AuthContext","FormattedMessage","useIntl","useQuery","useMutation","GET_CLIENTE_USERNAME","ADD_CLIENTE","SignInModal","SignOutModal","cid","intl","name","setName","useState","lastName","setLastName","email","setEmail","password","setPassword","authDispatch","addCliente","error","data","loading","variables","clientid","username","toggleSignInForm","show","overlayClassName","closeOnClickOutside","component","closeComponent","config","enableResizing","disableDragging","className","width","height","handleSubmit","cliente","length","console","log","alert","type","formatMessage","id","defaultMessage","e","target","value","padding"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { Input } from 'components/forms/input';\nimport { gql } from '@apollo/client';\nimport {\n  Button,\n  IconWrapper,\n  Wrapper,\n  Container,\n  LogoWrapper,\n  Heading,\n  SubHeading,\n  HelperText,\n  Offer,\n  // Input,\n  Divider,\n  LinkButton,\n} from './authentication-form.style';\nimport { openModal } from '@redq/reuse-modal';\nimport { Facebook } from 'assets/icons/facebook';\nimport { Google } from 'assets/icons/google';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useQuery,useMutation, NetworkStatus } from '@apollo/client';\nimport { GET_CLIENTE_USERNAME } from '../../utils/graphql/query/clients.query';\nimport { ADD_CLIENTE } from '../../utils/graphql/mutation/register_client';\nimport SignInModal from './login';\n\n\nexport default function SignOutModal({cid}) {\n  const intl = useIntl();\n  const [name, setName] = React.useState('');\n  const [lastName, setLastName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [addCliente,error] = useMutation(ADD_CLIENTE );\n  const { data, loading } =  useQuery(\n    GET_CLIENTE_USERNAME,\n    {\n      variables: {\n        clientid: cid,\n        username: email\n      } \n    }\n  );\n\n  const toggleSignInForm = () => {\n   /*  authDispatch({\n      type: 'SIGNIN',\n    }); */\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: SignInModal,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 558,\n        height: 'auto',\n      },\n    });\n  };\n\n  const handleSubmit = async () => {\n    \n    \n    if(data && data.cliente.length > 0){\n      console.log('usuario YA existe')\n      alert('usuario YA existe')\n    } else {\n      console.log('usuario NO existe')\n      await addCliente({\n        variables: {\n                  password: password, \n                  username: email, \n                  clientid: cid\n                }\n      });\n      if(error){\n        console.log('hubo un error', error)\n      } \n\n      \n         alert('grabó exitósamente')\n        \n        authDispatch({\n            type: 'SIGNIN',\n          });\n      \n        \n\n    } \n     \n  }\n\n  return (\n    <Wrapper>\n      <Container>\n        <Heading>\n          <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n        </Heading>\n        <SubHeading>\n          <FormattedMessage\n            id='signUpText'\n            defaultMessage='Every fill is required in sign up'\n          />\n        </SubHeading>\n      \n         {/*  ingreso de direccion */}\n         <Input\n          type='text'\n          placeholder={intl.formatMessage({\n            id: 'profileNameField',\n            defaultMessage: 'Nombre',\n          })}\n          onChange={(e) => setName(e.target.value)}\n          required\n          height='48px'\n          backgroundColor='#F7F7F7'\n          mb='10px'\n        />\n          <Input\n          type='text'\n          placeholder={intl.formatMessage({\n            id: 'profileLastNameField',\n            defaultMessage: 'Apellido',\n          })}\n          onChange={(e) => setLastName(e.target.value)}\n          required\n          height='48px'\n          backgroundColor='#F7F7F7'\n          mb='10px'\n        />\n        <Input\n          type='email'\n          placeholder={intl.formatMessage({\n            id: 'emailAddressPlaceholder',\n            defaultMessage: 'Dirección de correo electrónico o Teléfono de contacto',\n          })}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          height='48px'\n          backgroundColor='#F7F7F7'\n          mb='10px'\n        />\n         {/*  ingreso de password */}\n        <Input\n          type='password'\n          placeholder={intl.formatMessage({\n            id: 'passwordPlaceholder',\n            defaultMessage: 'Password (min 6 characters)',\n          })}\n          onChange={(e) => setPassword(e.target.value)}\n          required        \n          height='48px'\n          backgroundColor='#F7F7F7'\n          mb='10px'\n        />\n        <HelperText style={{ padding: '20px 0 30px' }}>\n          <FormattedMessage\n            id='signUpText'\n            defaultMessage=\"By signing up, you agree to Pickbazar's\"\n          />\n          &nbsp;\n          <Link href='/'>\n            <a>\n              <FormattedMessage\n                id='termsConditionText'\n                defaultMessage='Terms &amp; Condition'\n              />\n            </a>\n          </Link>\n        </HelperText>\n        <Button variant='danger' size='big' width='100%'  onClick={handleSubmit} type='submit'>\n          <FormattedMessage id='saved' defaultMessage='Continue' />\n        </Button>\n    {/*     <Divider>\n          <span>\n            <FormattedMessage id='orText' defaultMessage='or' />\n          </span>\n        </Divider> */}\n       {/*  <Button\n          variant='primary'\n          size='big'\n          style={{\n            width: '100%',\n            backgroundColor: '#4267b2',\n            marginBottom: 10,\n          }}\n        >\n          <IconWrapper>\n            <Facebook />\n          </IconWrapper>\n          <FormattedMessage\n            id='continueFacebookBtn'\n            defaultMessage='Continue with Facebook'\n          />\n        </Button> */}\n        {/* <Button\n          variant='primary'\n          size='big'\n          style={{ width: '100%', backgroundColor: '#4285f4' }}\n        >\n          <IconWrapper>\n            <Google />\n          </IconWrapper>\n          <FormattedMessage\n            id='continueGoogleBtn'\n            defaultMessage='Continue with Google'\n          />\n        </Button> */}\n        <Offer style={{ padding: '20px 0' }}>\n          <FormattedMessage\n            id='alreadyHaveAccount'\n            defaultMessage='Already have an account?'\n          />{' '}\n          <LinkButton onClick={toggleSignInForm}>\n            <FormattedMessage id='loginBtnText' defaultMessage='Login' />\n          </LinkButton>\n        </Offer>\n      </Container>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}