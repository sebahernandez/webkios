{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useMutation } from '@apollo/client';\nimport { closeModal } from '@redq/reuse-modal';\nimport { GET_PAYMENT } from 'graphql/mutation/order';\nimport StripeFormWrapper, { Heading, FieldWrapper } from './stripe-form.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nconst stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLIC_KEY);\n\nconst StripeForm = ({\n  buttonText,\n  getToken\n}) => {\n  // Get a reference to Stripe or Elements using hooks.\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    dispatch\n  } = useContext(ProfileContext);\n\n  const handleSubmit = async () => {\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Use elements.getElement to get a reference to the mounted Element.\n\n\n    const cardElement = elements.getElement(CardElement); // Pass the Element directly to other Stripe.js methods:\n    // e.g. createToken - https://stripe.com/docs/js/tokens_sources/create_token?type=cardElement\n\n    const {\n      token\n    } = await stripe.createToken(cardElement);\n    getToken(token);\n\n    if (token) {\n      dispatch({\n        type: 'ADD_CARD',\n        payload: token.card\n      });\n      closeModal();\n    }\n\n    console.log(token, 'token');\n  };\n\n  return /*#__PURE__*/_jsxs(StripeFormWrapper, {\n    children: [/*#__PURE__*/_jsx(Heading, {\n      children: \"Ingrese Informaci\\xF3n Tarjeta\"\n    }), /*#__PURE__*/_jsx(FieldWrapper, {\n      children: /*#__PURE__*/_jsx(CardElement, {})\n    }), /*#__PURE__*/_jsx(\"button\", {\n      type: \"button\",\n      onClick: handleSubmit,\n      children: buttonText ? buttonText : 'Pagar Ahora'\n    })]\n  });\n};\n\nconst StripePaymentForm = ({\n  item: {\n    price,\n    buttonText\n  }\n}) => {\n  const [getPayment] = useMutation(GET_PAYMENT);\n\n  const sendTokenToServer = async token => {\n    /*   const payment_info = await getPayment({\n        variables: { paymentInput: JSON.stringify({ token, amount: price }) },\n      }); */\n    console.log('payment_info', 'payment_info');\n    /*  console.log(payment_info, 'payment_info'); */\n  };\n\n  return /*#__PURE__*/_jsx(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsx(StripeForm, {\n      getToken: token => sendTokenToServer(token),\n      buttonText: buttonText\n    })\n  });\n};\n\nexport default StripePaymentForm;","map":null,"metadata":{},"sourceType":"module"}