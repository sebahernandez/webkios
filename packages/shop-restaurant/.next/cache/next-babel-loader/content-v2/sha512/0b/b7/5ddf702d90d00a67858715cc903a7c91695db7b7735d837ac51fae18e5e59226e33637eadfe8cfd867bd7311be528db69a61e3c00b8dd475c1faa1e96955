{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/components/contact-card/contact-card.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/client';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { Button } from 'components/button/button';\nimport { UPDATE_CONTACT } from 'utils/graphql/mutation/contact';\nimport { INSERT_CONTACT } from 'utils/graphql/mutation/contact';\nimport { FieldWrapper, Heading } from './contact-card.style';\nimport { FormattedMessage } from 'react-intl';\nimport Cookies from 'universal-cookie';\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('NÃºmero de Contacto es Requerido')\n});\n\nconst CreateOrUpdateContact = ({\n  item\n}) => {\n  const initialValues = {\n    id: item.id || null,\n    type: item.type || 'secondary',\n    number: item.number || ''\n  };\n  const [editContactMutation] = useMutation(UPDATE_CONTACT);\n  const [addContactMutation] = useMutation(INSERT_CONTACT);\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const cookie = new Cookies();\n  const cid = cookie.get('cid');\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    if (item === 'add-contact-modal') {\n      let addressData = await addContactMutation({\n        variables: {\n          \"number\": values.number,\n          \"type\": \"secondary\",\n          \"cliente\": cookie.get('customer').id,\n          \"clientid\": cid\n        }\n      });\n    } else {\n      const addressData = await editContactMutation({\n        variables: {\n          \"id\": values.id,\n          \"number\": values.number,\n          \"type\": \"secondary\",\n          \"cliente\": cookie.get('customer').id,\n          \"clientid\": cid\n        }\n      });\n    }\n\n    closeModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: ContactValidationSchema,\n    children: ({\n      values,\n      handleChange,\n      handleBlur,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: item && item.id ? 'Actualizar Contacto' : 'Agregar Nuevo Contacto'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n        children: /*#__PURE__*/_jsxDEV(MaskedInput, {\n          mask: ['(', /[1-9]/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n          className: \"form-control\",\n          placeholder: \"Ingrese n\\xFAmero tel\\xE9fonico\",\n          guide: false,\n          id: \"my-input-id\",\n          value: values.number,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          name: \"number\",\n          render: (ref, props) => /*#__PURE__*/_jsxDEV(StyledInput, _objectSpread({\n            ref: ref\n          }, props), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"number\",\n        component: StyledError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isSubmitting,\n        type: \"submit\",\n        style: {\n          width: '100%',\n          height: '44px'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"savedContactId\",\n          defaultMessage: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CreateOrUpdateContact;\nconst StyledInput = styled.input.withConfig({\n  displayName: \"contact-card__StyledInput\",\n  componentId: \"sc-ffjl4e-0\"\n})([\"width:100%;height:54px;border-radius:\", \";font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:\", \";padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet('radii.base', '6px'), themeGet('fonts.body', 'Lato, sans-serif'), themeGet('colors.gray.700', '#e6e6e6'), themeGet('colors.text.bold', '#0D1136'), themeGet('fontWeights.regular', '400'), themeGet('colors.primary.regular', '#009e7f'), themeGet('colors.text.regular', '#77798C'));\nconst StyledError = styled.div.withConfig({\n  displayName: \"contact-card__StyledError\",\n  componentId: \"sc-ffjl4e-1\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/components/contact-card/contact-card.tsx"],"names":["React","useContext","styled","themeGet","Yup","closeModal","ErrorMessage","Formik","Form","useMutation","MaskedInput","ProfileContext","Button","UPDATE_CONTACT","INSERT_CONTACT","FieldWrapper","Heading","FormattedMessage","Cookies","ContactValidationSchema","object","shape","number","string","required","CreateOrUpdateContact","item","initialValues","id","type","editContactMutation","addContactMutation","state","dispatch","cookie","cid","get","handleSubmit","values","setSubmitting","addressData","variables","handleChange","handleBlur","isSubmitting","ref","props","StyledError","width","height","StyledInput","input","div"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport * as Yup from 'yup';\nimport { closeModal } from '@redq/reuse-modal';\nimport { FormikProps, ErrorMessage, Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/client';\nimport MaskedInput from 'react-text-mask';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { Button } from 'components/button/button';\nimport { UPDATE_CONTACT } from 'utils/graphql/mutation/contact';\nimport { INSERT_CONTACT } from 'utils/graphql/mutation/contact';\nimport { FieldWrapper, Heading } from './contact-card.style';\nimport { FormattedMessage } from 'react-intl'\nimport Cookies  from 'universal-cookie';\n\n\ntype Props = {\n  item?: any | null;\n};\n// Shape of form values\ntype FormValues = {\n  id?: number | null;\n  type?: string;\n  number?: string;\n};\n\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required('NÃºmero de Contacto es Requerido'),\n});\n\nconst CreateOrUpdateContact: React.FC<Props> = ({ item }) => {\n  const initialValues = {\n    id: item.id || null,\n    type: item.type || 'secondary',\n    number: item.number || '',\n  };\n  const [editContactMutation] = useMutation(UPDATE_CONTACT);\n  const [addContactMutation] = useMutation(INSERT_CONTACT);\n  const { state, dispatch } = useContext(ProfileContext);\n  const cookie = new Cookies() \n  const cid =  cookie.get('cid')\n  const handleSubmit = async (values: FormValues, { setSubmitting }: any) => {\n\n\n    if (item === 'add-contact-modal') { \n      let addressData = await addContactMutation({\n          variables: {\n            \"number\": values.number,\n            \"type\": \"secondary\",\n            \"cliente\": cookie.get('customer').id,\n            \"clientid\": cid\n          }\n      });  \n     \n    } else {\n       \n        const addressData = await editContactMutation({\n            variables: { \n              \"id\": values.id,\n              \"number\": values.number,\n              \"type\": \"secondary\",\n              \"cliente\": cookie.get('customer').id,\n              \"clientid\": cid\n            },\n        });   \n    }  \n     closeModal();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={ContactValidationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        isSubmitting,\n      }: FormikProps<FormValues>) => (\n        <Form>\n          <Heading>\n            {item && item.id ? 'Actualizar Contacto' : 'Agregar Nuevo Contacto'}\n          </Heading>\n          <FieldWrapper>\n            <MaskedInput\n              mask={[\n                '(',\n                /[1-9]/,\n                ')',\n                ' ',\n                /\\d/, \n                /\\d/, \n                /\\d/, \n                /\\d/,\n                '-',\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n              ]}\n              className=\"form-control\"\n              placeholder=\"Ingrese nÃºmero telÃ©fonico\"\n              guide={false}\n              id=\"my-input-id\"\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name=\"number\"\n              render={(ref: any, props: {}) => (\n                <StyledInput ref={ref} {...props} />\n              )}\n            />\n          </FieldWrapper>\n          <ErrorMessage name=\"number\" component={StyledError} />\n\n          <Button\n            disabled={isSubmitting}\n            type=\"submit\"\n            style={{ width: '100%', height: '44px' }}\n          >\n            <FormattedMessage\n              id=\"savedContactId\"\n              defaultMessage=\"Guardar\"\n            />\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateOrUpdateContact;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: ${themeGet('radii.base', '6px')};\n  font-family: ${themeGet('fonts.body', 'Lato, sans-serif')};\n  border: 1px solid ${themeGet('colors.gray.700', '#e6e6e6')};\n  color: ${themeGet('colors.text.bold', '#0D1136')};\n  font-size: 16px;\n  line-height: 19px;\n  font-weight: ${themeGet('fontWeights.regular', '400')};\n  padding: 0 18px;\n  box-sizing: border-box;\n  transition: border-color 0.25s ease;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n  }\n\n  &:focus {\n    border-color: ${themeGet('colors.primary.regular', '#009e7f')};\n  }\n\n  &::placeholder {\n    color: ${themeGet('colors.text.regular', '#77798C')};\n  }\n`;\n\nconst StyledError = styled.div`\n  color: red;\n  padding-bottom: 10px;\n  margin-top: -5px;\n`;\n"]},"metadata":{},"sourceType":"module"}