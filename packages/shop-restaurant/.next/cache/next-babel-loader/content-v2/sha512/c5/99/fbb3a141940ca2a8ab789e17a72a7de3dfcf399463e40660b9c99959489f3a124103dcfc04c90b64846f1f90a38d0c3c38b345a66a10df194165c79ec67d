{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/features/payment/payment.tsx\";\nimport React, { useContext } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { handleModal } from 'features/checkouts/checkout-modal';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport StripePaymentForm from './stripe-form';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { CardHeader } from 'components/card-header/card-header';\n\nconst Payment = ({\n  deviceType,\n  increment = false\n}) => {\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const {\n    calculatePrice\n  } = useCart();\n  const {\n    state: {\n      card\n    },\n    dispatch\n  } = useContext(ProfileContext);\n\n  const handleOnDelete = async item => {\n    dispatch({\n      type: 'DELETE_CARD',\n      payload: item.id\n    });\n    return await deletePaymentCardMutation({\n      variables: {\n        cardId: JSON.stringify(item.id)\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      increment: increment,\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"selectPaymentText\",\n        defaultMessage: \"Select Payment Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaymentGroup, {\n      name: \"payment\",\n      deviceType: deviceType,\n      items: card,\n      onDelete: item => handleOnDelete(item),\n      onChange: item => dispatch({\n        type: 'SET_PRIMARY_CARD',\n        payload: item.id.toString()\n      }),\n      handleAddNewCard: () => {\n        handleModal(StripePaymentForm, {\n          totalPrice: calculatePrice()\n        }, 'add-address-modal stripe-modal');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Payment;","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/features/payment/payment.tsx"],"names":["React","useContext","FormattedMessage","handleModal","ProfileContext","PaymentGroup","StripePaymentForm","useCart","useMutation","DELETE_CARD","CardHeader","Payment","deviceType","increment","deletePaymentCardMutation","calculatePrice","state","card","dispatch","handleOnDelete","item","type","payload","id","variables","cardId","JSON","stringify","toString","totalPrice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,UAAT,QAA2B,oCAA3B;;AAMA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAS,GAAG;AAA1B,CAAD,KAA8C;AAC5D,QAAM,CAACC,yBAAD,IAA8BN,WAAW,CAACC,WAAD,CAA/C;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAqBR,OAAO,EAAlC;AAEA,QAAM;AACJS,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA;AAFI,MAGFjB,UAAU,CAACG,cAAD,CAHd;;AAKA,QAAMe,cAAc,GAAG,MAAOC,IAAP,IAAgB;AACrCF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEF,IAAI,CAACG;AAArC,KAAD,CAAR;AACA,WAAO,MAAMT,yBAAyB,CAAC;AACrCU,MAAAA,SAAS,EAAE;AAAEC,QAAAA,MAAM,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAI,CAACG,EAApB;AAAV;AAD0B,KAAD,CAAtC;AAGD,GALD;;AAMA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEV,SAAvB;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,EAAE,EAAC,mBADL;AAEE,QAAA,cAAc,EAAC;AAFjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,YAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,UAAU,EAAED,UAFd;AAGE,MAAA,KAAK,EAAEK,IAHT;AAIE,MAAA,QAAQ,EAAGG,IAAD,IAAUD,cAAc,CAACC,IAAD,CAJpC;AAKE,MAAA,QAAQ,EAAGA,IAAD,IACRF,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEF,IAAI,CAACG,EAAL,CAAQK,QAAR;AAFF,OAAD,CANZ;AAWE,MAAA,gBAAgB,EAAE,MAAM;AACtBzB,QAAAA,WAAW,CACTG,iBADS,EAET;AAAEuB,UAAAA,UAAU,EAAEd,cAAc;AAA5B,SAFS,EAGT,gCAHS,CAAX;AAKD;AAjBH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AA6BD,CA5CD;;AA8CA,eAAeJ,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { handleModal } from 'features/checkouts/checkout-modal';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport StripePaymentForm from './stripe-form';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { CardHeader } from 'components/card-header/card-header';\ninterface Props {\n  deviceType: any;\n  increment?: boolean;\n}\n\nconst Payment = ({ deviceType, increment = false }: Props) => {\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const { calculatePrice } = useCart();\n\n  const {\n    state: { card },\n    dispatch,\n  } = useContext(ProfileContext);\n\n  const handleOnDelete = async (item) => {\n    dispatch({ type: 'DELETE_CARD', payload: item.id });\n    return await deletePaymentCardMutation({\n      variables: { cardId: JSON.stringify(item.id) },\n    });\n  };\n  return (\n    <>\n      <CardHeader increment={increment}>\n        <FormattedMessage\n          id=\"selectPaymentText\"\n          defaultMessage=\"Select Payment Option\"\n        />\n      </CardHeader>\n      <PaymentGroup\n        name=\"payment\"\n        deviceType={deviceType}\n        items={card}\n        onDelete={(item) => handleOnDelete(item)}\n        onChange={(item: any) =>\n          dispatch({\n            type: 'SET_PRIMARY_CARD',\n            payload: item.id.toString(),\n          })\n        }\n        handleAddNewCard={() => {\n          handleModal(\n            StripePaymentForm,\n            { totalPrice: calculatePrice() },\n            'add-address-modal stripe-modal'\n          );\n        }}\n      />\n    </>\n  );\n};\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}