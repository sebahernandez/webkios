{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/pages/product/[slug].tsx\";\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { SEO } from 'components/seo';\nimport { Modal } from '@redq/reuse-modal';\nimport ProductSingleWrapper, { ProductSingleContainer } from 'assets/styles/product-single.style';\nimport { GET_PRODUCT_DETAILS } from 'graphql/query/product.query';\nimport { initializeApollo } from 'utils/apollo';\nconst ProductDetails = dynamic(() => import('components/product-details/product-details-one/product-details-one'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/product-details/product-details-one/product-details-one')],\n    modules: [\"product/[slug].tsx -> \" + 'components/product-details/product-details-one/product-details-one']\n  }\n});\nconst ProductDetailsBook = dynamic(() => import('components/product-details/product-details-two/product-details-two'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/product-details/product-details-two/product-details-two')],\n    modules: [\"product/[slug].tsx -> \" + 'components/product-details/product-details-two/product-details-two']\n  }\n});\nconst CartPopUp = dynamic(() => import('features/carts/cart-popup'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('features/carts/cart-popup')],\n    modules: [\"product/[slug].tsx -> \" + 'features/carts/cart-popup']\n  }\n});\n\nconst ProductPage = ({\n  data,\n  deviceType\n}) => {\n  let content = /*#__PURE__*/_jsxDEV(ProductDetails, {\n    product: data.product,\n    deviceType: deviceType\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  if (data.product.type === 'BOOK') {\n    content = /*#__PURE__*/_jsxDEV(ProductDetailsBook, {\n      product: data.product,\n      deviceType: deviceType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SEO, {\n      title: `${data.product.title} - PickBazar`,\n      description: `${data.product.title} Details`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ProductSingleWrapper, {\n        children: /*#__PURE__*/_jsxDEV(ProductSingleContainer, {\n          children: [content, /*#__PURE__*/_jsxDEV(CartPopUp, {\n            deviceType: deviceType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getServerSideProps({\n  params\n}) {\n  const apolloClient = initializeApollo();\n  const {\n    data\n  } = await apolloClient.query({\n    query: GET_PRODUCT_DETAILS,\n    variables: {\n      slug: params.slug\n    }\n  });\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default ProductPage;","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/pages/product/[slug].tsx"],"names":["React","dynamic","SEO","Modal","ProductSingleWrapper","ProductSingleContainer","GET_PRODUCT_DETAILS","initializeApollo","ProductDetails","ProductDetailsBook","CartPopUp","ssr","ProductPage","data","deviceType","content","product","type","title","getServerSideProps","params","apolloClient","query","variables","slug","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,oBAAP,IACEC,sBADF,QAEO,oCAFP;AAGA,SAASC,mBAAT,QAAoC,6BAApC;AACA,SAASC,gBAAT,QAAiC,cAAjC;AAEA,MAAMC,cAAc,GAAGP,OAAO,CAAC,MAC7B,OAAO,oEAAP,CAD4B;AAAA;AAAA,wCACrB,oEADqB;AAAA,yCACrB,oEADqB;AAAA;AAAA,EAA9B;AAGA,MAAMQ,kBAAkB,GAAGR,OAAO,CAAC,MACjC,OAAO,oEAAP,CADgC;AAAA;AAAA,wCACzB,oEADyB;AAAA,yCACzB,oEADyB;AAAA;AAAA,EAAlC;AAIA,MAAMS,SAAS,GAAGT,OAAO,CAAC,MAAM,OAAO,2BAAP,CAAP,EAA4C;AACnEU,EAAAA,GAAG,EAAE,KAD8D;AAAA;AAAA,wCAA9B,2BAA8B;AAAA,yCAA9B,2BAA8B;AAAA;AAAA,CAA5C,CAAzB;;AAcA,MAAMC,WAA4B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AAC7D,MAAIC,OAAO,gBACT,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAEF,IAAI,CAACG,OAA9B;AAAuC,IAAA,UAAU,EAAEF;AAAnD;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,MAAID,IAAI,CAACG,OAAL,CAAaC,IAAb,KAAsB,MAA1B,EAAkC;AAChCF,IAAAA,OAAO,gBACL,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEF,IAAI,CAACG,OAAlC;AAA2C,MAAA,UAAU,EAAEF;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,sBACE;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,KAAK,EAAG,GAAED,IAAI,CAACG,OAAL,CAAaE,KAAM,cAD/B;AAEE,MAAA,WAAW,EAAG,GAAEL,IAAI,CAACG,OAAL,CAAaE,KAAM;AAFrC;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AAAA,6BACE,QAAC,oBAAD;AAAA,+BACE,QAAC,sBAAD;AAAA,qBACGH,OADH,eAEE,QAAC,SAAD;AAAW,YAAA,UAAU,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAiBD,CA3BD;;AA4BA,OAAO,eAAeK,kBAAf,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAA8C;AACnD,QAAMC,YAAY,GAAGd,gBAAgB,EAArC;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAW,MAAMQ,YAAY,CAACC,KAAb,CAAmB;AACxCA,IAAAA,KAAK,EAAEhB,mBADiC;AAExCiB,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AADJ;AAF6B,GAAnB,CAAvB;AAMA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLZ,MAAAA;AADK;AADF,GAAP;AAKD;AACD,eAAeD,WAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport dynamic from 'next/dynamic';\nimport { SEO } from 'components/seo';\nimport { Modal } from '@redq/reuse-modal';\nimport ProductSingleWrapper, {\n  ProductSingleContainer,\n} from 'assets/styles/product-single.style';\nimport { GET_PRODUCT_DETAILS } from 'graphql/query/product.query';\nimport { initializeApollo } from 'utils/apollo';\n\nconst ProductDetails = dynamic(() =>\n  import('components/product-details/product-details-one/product-details-one')\n);\nconst ProductDetailsBook = dynamic(() =>\n  import('components/product-details/product-details-two/product-details-two')\n);\n\nconst CartPopUp = dynamic(() => import('features/carts/cart-popup'), {\n  ssr: false,\n});\n\ntype Props = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n  data: any;\n  [key: string]: any;\n};\n\nconst ProductPage: NextPage<Props> = ({ data, deviceType }) => {\n  let content = (\n    <ProductDetails product={data.product} deviceType={deviceType} />\n  );\n\n  if (data.product.type === 'BOOK') {\n    content = (\n      <ProductDetailsBook product={data.product} deviceType={deviceType} />\n    );\n  }\n  return (\n    <>\n      <SEO\n        title={`${data.product.title} - PickBazar`}\n        description={`${data.product.title} Details`}\n      />\n\n      <Modal>\n        <ProductSingleWrapper>\n          <ProductSingleContainer>\n            {content}\n            <CartPopUp deviceType={deviceType} />\n          </ProductSingleContainer>\n        </ProductSingleWrapper>\n      </Modal>\n    </>\n  );\n};\nexport async function getServerSideProps({ params }) {\n  const apolloClient = initializeApollo();\n\n  const { data } = await apolloClient.query({\n    query: GET_PRODUCT_DETAILS,\n    variables: {\n      slug: params.slug,\n    },\n  });\n  return {\n    props: {\n      data,\n    },\n  };\n}\nexport default ProductPage;\n"]},"metadata":{},"sourceType":"module"}