{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/contexts/auth/auth.provider.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useReducer } from 'react';\nimport { AuthContext } from './auth.context';\nconst isBrowser = false;\nimport Cookies from 'universal-cookie';\nimport { GET_SUSCRIPCION_X_HOST } from 'utils/graphql/query/suscripcion.query';\nimport { useQuery } from '@apollo/client';\nconst cookie = new Cookies();\nconst INITIAL_STATE = {\n  isAuthenticated: isBrowser && !!cookie.get('access_token'),\n  currentForm: 'signIn'\n};\n\nfunction reducer(state, action) {\n  console.log(state, 'auth');\n\n  switch (action.type) {\n    case 'SIGNIN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentForm: 'signIn'\n      });\n\n    case 'SIGNIN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: true\n      });\n\n    case 'SIGN_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: false\n      });\n\n    case 'SIGNUP':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentForm: 'signUp'\n      });\n\n    case 'FORGOTPASS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentForm: 'forgotPass'\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const [host, setHost] = useState('localhost');\n  const {\n    data\n  } = useQuery(GET_SUSCRIPCION_X_HOST, {\n    variables: {\n      host: host\n    }\n  });\n  useEffect(() => {\n    if (window) {\n      //host = \"%\".concat(window.location.hostname).concat(\"%\")\n      cookie.remove('cid');\n      cookie.set('cid', 'XIJX3-WR3EG-N0ZNH-DMS8E');\n    }\n    /*   if(host){  \n        if(data && data.suscripciones.length > 0) {  \n          cookie.set('cid',data.suscripciones[0].clientid)  \n        } \n      } */\n\n  }, [host]);\n  const {\n    0: authState,\n    1: authDispatch\n  } = useReducer(reducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      authDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/contexts/auth/auth.provider.tsx"],"names":["React","useEffect","useReducer","AuthContext","isBrowser","Cookies","GET_SUSCRIPCION_X_HOST","useQuery","cookie","INITIAL_STATE","isAuthenticated","get","currentForm","reducer","state","action","console","log","type","AuthProvider","children","host","setHost","useState","data","variables","window","remove","set","authState","authDispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,MAAMC,SAAS,QAAf;AACA,OAAOC,OAAP,MAAqB,kBAArB;AACA,SAASC,sBAAT,QAAuC,uCAAvC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,MAAMC,MAAM,GAAG,IAAIH,OAAJ,EAAf;AAEA,MAAMI,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAEN,SAAS,IAAI,CAAC,CAACI,MAAM,CAACG,GAAP,CAAW,cAAX,CADZ;AAEpBC,EAAAA,WAAW,EAAE;AAFO,CAAtB;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAA6BC,MAA7B,EAA0C;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmB,MAAnB;;AAEA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,QAAL;AACE,6CACKJ,KADL;AAEEF,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAK,gBAAL;AACE,6CACKE,KADL;AAEEJ,QAAAA,eAAe,EAAE;AAFnB;;AAIF,SAAK,UAAL;AACE,6CACKI,KADL;AAEEJ,QAAAA,eAAe,EAAE;AAFnB;;AAIF,SAAK,QAAL;AACE,6CACKI,KADL;AAEEF,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAK,YAAL;AACE,6CACKE,KADL;AAEEF,QAAAA,WAAW,EAAE;AAFf;;AAIF;AACE,aAAOE,KAAP;AA3BJ;AA6BD;;AAED,OAAO,MAAMK,YAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAErE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,WAAD,CAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWjB,QAAQ,CAACD,sBAAD,EACvB;AACImB,IAAAA,SAAS,EAAE;AACTJ,MAAAA,IAAI,EAAEA;AADG;AADf,GADuB,CAAzB;AAOCpB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAGyB,MAAH,EAAW;AACT;AACAlB,MAAAA,MAAM,CAACmB,MAAP,CAAc,KAAd;AACAnB,MAAAA,MAAM,CAACoB,GAAP,CAAW,KAAX,EAAiB,yBAAjB;AACD;AACH;AACF;AACA;AACA;AACA;;AAEG,GAZS,EAYP,CAAEP,IAAF,CAZO,CAAT;AAeD,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4B5B,UAAU,CAACW,OAAD,EAAUJ,aAAV,CAA5C;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEoB,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAA7B;AAAA,cACGV;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/BM","sourcesContent":["import React, { useEffect, useReducer } from 'react';\nimport { AuthContext } from './auth.context';\nconst isBrowser = typeof window !== 'undefined';\nimport Cookies  from 'universal-cookie';\nimport { GET_SUSCRIPCION_X_HOST } from 'utils/graphql/query/suscripcion.query'; \nimport { useQuery } from '@apollo/client';\n\nconst cookie = new Cookies()\n\nconst INITIAL_STATE = {\n  isAuthenticated: isBrowser && !!cookie.get('access_token'),\n  currentForm: 'signIn',\n};\n\nfunction reducer(state: any, action: any) {\n  console.log(state, 'auth');\n\n  switch (action.type) {\n    case 'SIGNIN':\n      return {\n        ...state,\n        currentForm: 'signIn',\n      };\n    case 'SIGNIN_SUCCESS':\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case 'SIGN_OUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case 'SIGNUP':\n      return {\n        ...state,\n        currentForm: 'signUp',\n      };\n    case 'FORGOTPASS':\n      return {\n        ...state,\n        currentForm: 'forgotPass',\n      };\n    default:\n      return state;\n  }\n}\n\nexport const AuthProvider: React.FunctionComponent = ({ children }) => {\n\n  const [host, setHost] = useState('localhost')\n  const { data } = useQuery(GET_SUSCRIPCION_X_HOST,\n    {\n        variables: {\n          host: host\n        }\n  }); \n \n   useEffect(() => {\n    if(window) {\n      //host = \"%\".concat(window.location.hostname).concat(\"%\")\n      cookie.remove('cid')  \n      cookie.set('cid','XIJX3-WR3EG-N0ZNH-DMS8E')  \n    }     \n  /*   if(host){  \n      if(data && data.suscripciones.length > 0) {  \n        cookie.set('cid',data.suscripciones[0].clientid)  \n      } \n    } */\n\n  }, [ host]);\n\n\n  const [authState, authDispatch] = useReducer(reducer, INITIAL_STATE);\n  return (\n    <AuthContext.Provider value={{ authState, authDispatch }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}