{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { StyledForm, StyledInput, StyledCategoryName, StyledSearchButton } from './search-box.style';\nimport { SearchIcon } from 'assets/icons/SearchIcon';\nexport const SearchBox = (_ref) => {\n  let {\n    onEnter,\n    onChange,\n    value,\n    name,\n    minimal,\n    categoryType,\n    buttonText,\n    className,\n    showButtonText = true,\n    shadow\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"onEnter\", \"onChange\", \"value\", \"name\", \"minimal\", \"categoryType\", \"buttonText\", \"className\", \"showButtonText\", \"shadow\"]);\n\n  return /*#__PURE__*/_jsx(StyledForm, {\n    onSubmit: onEnter,\n    className: className,\n    boxShadow: shadow,\n    minimal: minimal,\n    children: minimal ? /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(SearchIcon, {\n        style: {\n          marginLeft: 16,\n          marginRight: 16,\n          color: '#212121'\n        }\n      }), /*#__PURE__*/_jsx(StyledInput, _objectSpread({\n        type: \"search\",\n        onChange: onChange,\n        value: value,\n        name: name\n      }, rest))]\n    }) : /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(StyledCategoryName, {\n        children: categoryType\n      }), /*#__PURE__*/_jsx(StyledInput, _objectSpread({\n        type: \"search\",\n        onChange: onChange,\n        value: value,\n        name: name\n      }, rest)), /*#__PURE__*/_jsxs(StyledSearchButton, {\n        children: [/*#__PURE__*/_jsx(SearchIcon, {\n          style: {\n            marginRight: 10\n          }\n        }), showButtonText && buttonText]\n      })]\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}