{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useContext } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { handleModal } from 'features/checkouts/checkout-modal';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport StripePaymentForm from './stripe-form';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { CardHeader } from 'components/card-header/card-header';\n\nvar Payment = function Payment(_ref) {\n  var deviceType = _ref.deviceType,\n      _ref$increment = _ref.increment,\n      increment = _ref$increment === void 0 ? false : _ref$increment;\n\n  var _useMutation = useMutation(DELETE_CARD),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deletePaymentCardMutation = _useMutation2[0];\n\n  var _useCart = useCart(),\n      calculatePrice = _useCart.calculatePrice;\n\n  var _useContext = useContext(ProfileContext),\n      card = _useContext.state.card,\n      dispatch = _useContext.dispatch;\n\n  var handleOnDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: 'DELETE_CARD',\n                payload: item.id\n              });\n              _context.next = 3;\n              return deletePaymentCardMutation({\n                variables: {\n                  cardId: JSON.stringify(item.id)\n                }\n              });\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleOnDelete(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(CardHeader, {\n      increment: increment,\n      children: /*#__PURE__*/_jsx(FormattedMessage, {\n        id: \"selectPaymentText\",\n        defaultMessage: \"Select Payment Option\"\n      })\n    }), /*#__PURE__*/_jsx(PaymentGroup, {\n      name: \"payment\",\n      deviceType: deviceType,\n      items: card,\n      onDelete: function onDelete(item) {\n        return handleOnDelete(item);\n      },\n      onChange: function onChange(item) {\n        return dispatch({\n          type: 'SET_PRIMARY_CARD',\n          payload: item.id.toString()\n        });\n      },\n      handleAddNewCard: function handleAddNewCard() {\n        handleModal(StripePaymentForm, {\n          totalPrice: calculatePrice()\n        }, 'add-address-modal stripe-modal');\n      }\n    })]\n  });\n};\n\nexport default Payment;","map":null,"metadata":{},"sourceType":"module"}