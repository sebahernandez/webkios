{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/alejandrosandoval/space/world_eserp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\nquery GET_ORDER_ACTIVA($clientid: String!, $cliente: Int!) {\\n  pedido(where: {clientid: {_eq: $clientid}, cliente: {_eq: $cliente}, is_closed: {_eq: false}}) {\\n    id\\n    is_closed\\n    is_cancelled\\n  }\\n}\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\nsubscription ($clientid: String!, $order: String!) {\\n  pedido(where: {clientid: {_eq: $clientid}, _and: {order: {_eq: $order}}}) {\\n  id\\n  cliente\\n  order\\n  total\\n  delivery_address\\n  delivery_date\\n  total\\n  subtotal\\n  discount\\n  order_date\\n  is_received\\n  is_process\\n  is_delivery\\n  is_closed\\n  is_cancelled\\n  items  \\n  itemcount\\n}\\n}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nsubscription fetchPublicOrders($clientid: String!, $limit: Int!, $user: Int!) {\\npedido(limit: $limit, where: {cliente: {_eq: $user},clientid: {_eq: $clientid}, _and: {is_received: {_eq: true}}}, order_by: {creation_date: desc}) {\\n  id\\n  cliente\\n  order\\n  total\\n  delivery_address\\n  delivery_date\\n  total\\n  subtotal\\n  discount\\n  order_date\\n  is_received\\n  is_process\\n  is_delivery\\n  is_closed\\n  is_cancelled\\n  items  \\n  itemcount\\n}\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getAllOrders($text: String, $user: Int!, $limit: Int) {\\n  orders(text: $text, limit: $limit, user: $user) {\\n    id\\n    status\\n    deliveryAddress\\n    amount\\n    date\\n    subtotal\\n    deliveryFee\\n    discount\\n    deliveryTime\\n    products {\\n      title\\n      price\\n      total\\n      image\\n      weight\\n      quantity\\n      id\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '@apollo/client';\nexport var GET_ORDERS = gql(_templateObject());\nexport var GET_ORDERS_PUBLIC = gql(_templateObject2());\nexport var GET_ORDERS_CRM_PUBLIC = gql(_templateObject3());\nexport var GET_ORDERS_OPEN = gql(_templateObject4());","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/utils/graphql/query/orders.query.ts"],"names":["gql","GET_ORDERS","GET_ORDERS_PUBLIC","GET_ORDERS_CRM_PUBLIC","GET_ORDERS_OPEN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,IAAMC,UAAU,GAAGD,GAAH,mBAAhB;AAyBP,OAAO,IAAME,iBAAiB,GAAGF,GAAH,oBAAvB;AAwBP,OAAO,IAAMG,qBAAqB,GAAGH,GAAH,oBAA3B;AAyBP,OAAO,IAAMI,eAAe,GAAGJ,GAAH,oBAArB","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_ORDERS = gql`\nquery getAllOrders($text: String, $user: Int!, $limit: Int) {\n  orders(text: $text, limit: $limit, user: $user) {\n    id\n    status\n    deliveryAddress\n    amount\n    date\n    subtotal\n    deliveryFee\n    discount\n    deliveryTime\n    products {\n      title\n      price\n      total\n      image\n      weight\n      quantity\n      id\n    }\n  }\n}\n`;\n\nexport const GET_ORDERS_PUBLIC = gql`\nsubscription fetchPublicOrders($clientid: String!, $limit: Int!, $user: Int!) {\npedido(limit: $limit, where: {cliente: {_eq: $user},clientid: {_eq: $clientid}, _and: {is_received: {_eq: true}}}, order_by: {creation_date: desc}) {\n  id\n  cliente\n  order\n  total\n  delivery_address\n  delivery_date\n  total\n  subtotal\n  discount\n  order_date\n  is_received\n  is_process\n  is_delivery\n  is_closed\n  is_cancelled\n  items  \n  itemcount\n}\n}\n`;\n\nexport const GET_ORDERS_CRM_PUBLIC = gql`\nsubscription ($clientid: String!, $order: String!) {\n  pedido(where: {clientid: {_eq: $clientid}, _and: {order: {_eq: $order}}}) {\n  id\n  cliente\n  order\n  total\n  delivery_address\n  delivery_date\n  total\n  subtotal\n  discount\n  order_date\n  is_received\n  is_process\n  is_delivery\n  is_closed\n  is_cancelled\n  items  \n  itemcount\n}\n}\n`;\n\n\nexport const GET_ORDERS_OPEN = gql`\nquery GET_ORDER_ACTIVA($clientid: String!, $cliente: Int!) {\n  pedido(where: {clientid: {_eq: $clientid}, cliente: {_eq: $cliente}, is_closed: {_eq: false}}) {\n    id\n    is_closed\n    is_cancelled\n  }\n}\n`;"]},"metadata":{},"sourceType":"module"}