{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/components/address-card/address-card.tsx\";\nimport React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\n\n/* import { UPDATE_ADDRESS } from 'graphql/mutation/address'; */\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl'; // Shape of form values\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Title is required!'),\n    info: Yup.string().required('Address is required')\n  }),\n  handleSubmit: values => {\n    console.log(values, 'values'); // do submitting things\n  }\n});\n\nconst UpdateAddress = props => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n    handleReset,\n    isSubmitting\n  } = props;\n  const addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info\n  };\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  /*   const [addressMutation, { data }] = useMutation(UPDATE_ADDRESS);\n   */\n\n  const handleSubmit = async () => {\n    if (isValid) {\n      /*   const addressData = await addressMutation({\n          variables: { addressInput: JSON.stringify(addressValue) },\n        }); */\n\n      /*  console.log(addressData, 'address data'); */\n      dispatch({\n        type: 'ADD_OR_UPDATE_ADDRESS',\n        payload: addressValue\n      });\n      closeModal();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: item && item.id ? 'Editar Dirección' : 'Agregar Nueva Dirección'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"Ingresa Titulo\",\n        error: touched.name && errors.name,\n        value: values.name,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"info\",\n        as: \"textarea\",\n        placeholder: \"Ingrese su Direcci\\xF3n\",\n        error: touched.info && errors.info,\n        value: values.info,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      type: \"submit\",\n      style: {\n        width: '100%',\n        height: '44px'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"savedAddressId\",\n        defaultMessage: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FormEnhancer(UpdateAddress);","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/components/address-card/address-card.tsx"],"names":["React","useContext","Yup","withFormik","Form","closeModal","TextField","Button","FieldWrapper","Heading","ProfileContext","FormattedMessage","FormEnhancer","mapPropsToValues","props","id","item","name","info","validationSchema","object","shape","string","required","handleSubmit","values","console","log","UpdateAddress","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","addressValue","type","state","dispatch","payload","width","height"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/client';\n/* import { UPDATE_ADDRESS } from 'graphql/mutation/address'; */\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\n\n// Shape of form values\ninterface FormValues {\n  id?: number | null;\n  name?: string;\n  info?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n}\n\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Title is required!'),\n    info: Yup.string().required('Address is required'),\n  }),\n  handleSubmit: (values) => {\n    console.log(values, 'values');\n    // do submitting things\n  },\n});\n\nconst UpdateAddress = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n\n    handleReset,\n    isSubmitting,\n  } = props;\n  const addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info,\n  };\n  const { state, dispatch } = useContext(ProfileContext);\n\n/*   const [addressMutation, { data }] = useMutation(UPDATE_ADDRESS);\n */\n  const handleSubmit = async () => {\n    if (isValid) {\n    /*   const addressData = await addressMutation({\n        variables: { addressInput: JSON.stringify(addressValue) },\n      }); */\n     /*  console.log(addressData, 'address data'); */\n      dispatch({ type: 'ADD_OR_UPDATE_ADDRESS', payload: addressValue });\n      closeModal();\n    }\n  };\n  return (\n    <Form>\n      <Heading>{item && item.id ? 'Editar Dirección' : 'Agregar Nueva Dirección'}</Heading>\n      <FieldWrapper>\n        <TextField\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Ingresa Titulo\"\n          error={touched.name && errors.name}\n          value={values.name}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <FieldWrapper>\n        <TextField\n          id=\"info\"\n          as=\"textarea\"\n          placeholder=\"Ingrese su Dirección\"\n          error={touched.info && errors.info}\n          value={values.info}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"submit\"\n        style={{ width: '100%', height: '44px' }}\n      >\n        <FormattedMessage id=\"savedAddressId\" defaultMessage=\"Guardar\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(UpdateAddress);\n"]},"metadata":{},"sourceType":"module"}