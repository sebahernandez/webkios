{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/components/address-card/address-card.tsx\";\nimport React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/client';\nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\nimport { UPDATE_ADDRESS } from 'utils/graphql/mutation/address';\nimport { INSERT_ADDRESS } from 'utils/graphql/mutation/address';\nimport Cookies from 'universal-cookie'; // Shape of form values\n\nconst cookie = new Cookies(); // Wrap our form with the using withFormik HoC\n\nconst FormEnhancer = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('El Título es un dato requerido!'),\n    info: Yup.string().required('La Dirección es Requerida')\n  }),\n  handleSubmit: values => {// do submitting things\n  }\n});\n\nconst UpdateAddress = props => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur,\n    handleReset,\n    isSubmitting\n  } = props;\n  const addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info\n  };\n  const {\n    cid\n  } = cookie.get('cid');\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const [addressMutation, {\n    data\n  }] = useMutation(UPDATE_ADDRESS);\n  const [addressInsertMutation] = useMutation(INSERT_ADDRESS);\n\n  const handleSubmit = async () => {\n    if (isValid && item === 'add-address-modal') {\n      const addressData = await addressInsertMutation({\n        variables: {\n          \"name\": values.name,\n          \"info\": values.info,\n          \"type\": \"secondary\",\n          \"cliente\": cookie.get('customer').id,\n          \"clientid\": cid\n        }\n      });\n      closeModal();\n    } else {\n      if (isValid) {\n        const addressData = await addressMutation({\n          variables: {\n            \"id\": values.id,\n            \"name\": values.name,\n            \"info\": values.info,\n            \"type\": item.type,\n            \"cliente\": cookie.get('customer').id,\n            \"clientid\": cid\n          }\n        });\n        /* dispatch({ type: 'ADD_OR_UPDATE_ADDRESS', payload: addressValue });  */\n\n        closeModal();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: item && item.id ? 'Editar Dirección' : 'Agregar Nueva Dirección'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"Ingresa Titulo\",\n        error: touched.name && errors.name,\n        value: values.name,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"info\",\n        as: \"textarea\",\n        placeholder: \"Ingrese su Direcci\\xF3n\",\n        error: touched.info && errors.info,\n        value: values.info,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      type: \"submit\",\n      style: {\n        width: '100%',\n        height: '44px'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"savedAddressId\",\n        defaultMessage: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FormEnhancer(UpdateAddress);","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/components/address-card/address-card.tsx"],"names":["React","useContext","Yup","withFormik","Form","closeModal","TextField","Button","useMutation","FieldWrapper","Heading","ProfileContext","FormattedMessage","UPDATE_ADDRESS","INSERT_ADDRESS","Cookies","cookie","FormEnhancer","mapPropsToValues","props","id","item","name","info","validationSchema","object","shape","string","required","handleSubmit","values","UpdateAddress","isValid","touched","errors","dirty","handleChange","handleBlur","handleReset","isSubmitting","addressValue","type","cid","get","state","dispatch","addressMutation","data","addressInsertMutation","addressData","variables","width","height"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport * as Yup from 'yup';\nimport { withFormik, FormikProps, Form } from 'formik';\nimport { closeModal } from '@redq/reuse-modal';\nimport TextField from 'components/forms/text-field';\nimport { Button } from 'components/button/button';\nimport { useMutation } from '@apollo/client'; \nimport { FieldWrapper, Heading } from './address-card.style';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { FormattedMessage } from 'react-intl';\nimport { UPDATE_ADDRESS } from 'utils/graphql/mutation/address';\nimport { INSERT_ADDRESS } from 'utils/graphql/mutation/address';\nimport Cookies  from 'universal-cookie';\n\n// Shape of form values\ninterface FormValues {\n  id?: number | null;\n  name?: string;\n  info?: string;\n}\n\n// The type of props MyForm receives\ninterface MyFormProps {\n  item?: any | null;\n}\nconst cookie = new Cookies()\n// Wrap our form with the using withFormik HoC\nconst FormEnhancer = withFormik<MyFormProps, FormValues>({\n  // Transform outer props into form values\n  mapPropsToValues: (props) => {\n    return {\n      id: props.item.id || null,\n      name: props.item.name || '',\n      info: props.item.info || '',\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('El Título es un dato requerido!'),\n    info: Yup.string().required('La Dirección es Requerida'),\n  }),\n  handleSubmit: (values) => {\n \n    // do submitting things\n  },\n});\n\nconst UpdateAddress = (props: FormikProps<FormValues> & MyFormProps) => {\n  const {\n    isValid,\n    item,\n    values,\n    touched,\n    errors,\n    dirty,\n    handleChange,\n    handleBlur, \n    handleReset,\n    isSubmitting,\n  } = props;\n  const addressValue = {\n    id: values.id,\n    type: 'secondary',\n    name: values.name,\n    info: values.info,\n  }; \n  const {cid} = cookie.get('cid');\n  const { state, dispatch } = useContext(ProfileContext);\n\n  const [addressMutation, { data }] = useMutation(UPDATE_ADDRESS);\n\n  const [addressInsertMutation] = useMutation(INSERT_ADDRESS); \n\n  const handleSubmit = async () => {\n    \n    if (isValid && item === 'add-address-modal') { \n      const addressData = await addressInsertMutation({\n          variables: { \n            \"name\": values.name,\n            \"info\": values.info,\n            \"type\": \"secondary\",\n            \"cliente\": cookie.get('customer').id,\n            \"clientid\": cid\n          },\n      });  \n      closeModal();\n    }else {\n      if (isValid) { \n        const addressData = await addressMutation({\n            variables: { \n              \"id\": values.id,\n              \"name\": values.name,\n              \"info\": values.info,  \n              \"type\": item.type,\n              \"cliente\": cookie.get('customer').id,\n              \"clientid\": cid\n            },\n        }); \n           /* dispatch({ type: 'ADD_OR_UPDATE_ADDRESS', payload: addressValue });  */\n        closeModal();\n      }\n    }\n\n\n\n  };\n  return (\n    <Form>\n      <Heading>{item && item.id ? 'Editar Dirección' : 'Agregar Nueva Dirección'}</Heading>\n      <FieldWrapper>\n        <TextField\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Ingresa Titulo\"\n          error={touched.name && errors.name}\n          value={values.name}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <FieldWrapper>\n        <TextField\n          id=\"info\"\n          as=\"textarea\"\n          placeholder=\"Ingrese su Dirección\"\n          error={touched.info && errors.info}\n          value={values.info}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </FieldWrapper>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"submit\"\n        style={{ width: '100%', height: '44px' }}\n      >\n        <FormattedMessage id=\"savedAddressId\" defaultMessage=\"Guardar\" />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormEnhancer(UpdateAddress);\n"]},"metadata":{},"sourceType":"module"}