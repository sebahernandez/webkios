{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/alejandrosandoval/space/world_eserp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FormattedMessage } from 'react-intl';\nimport { Text, TextHighlighted, Container, ThumbsContainer, Thumb, ThumbInner, Img } from './upload.style';\nimport { UploadIcon } from 'assets/icons/UploadIcon';\n\nvar Uploader = function Uploader(_ref) {\n  var onChange = _ref.onChange,\n      imageURL = _ref.imageURL,\n      intlUploadText = _ref.intlUploadText;\n\n  var _useState = useState(imageURL ? [{\n    name: 'demo',\n    preview: imageURL\n  }] : []),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  var _useDropzone = useDropzone({\n    accept: 'image/*',\n    multiple: false,\n    onDrop: useCallback(function (acceptedFiles) {\n      setFiles(acceptedFiles.map(function (file) {\n        return Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        });\n      }));\n      onChange(acceptedFiles);\n    }, [onChange])\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var thumbs = files.map(function (file) {\n    return /*#__PURE__*/_jsx(Thumb, {\n      children: /*#__PURE__*/_jsx(ThumbInner, {\n        children: /*#__PURE__*/_jsx(Img, {\n          src: file.preview,\n          alt: file.name\n        })\n      })\n    }, file.name);\n  });\n  useEffect(function () {\n    return function () {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(function (file) {\n        return URL.revokeObjectURL(file.preview);\n      });\n    };\n  }, [files]);\n  return /*#__PURE__*/_jsxs(\"section\", {\n    className: \"container uploader\",\n    children: [/*#__PURE__*/_jsxs(Container, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n      children: [/*#__PURE__*/_jsx(\"input\", _objectSpread({}, getInputProps())), /*#__PURE__*/_jsx(UploadIcon, {}), /*#__PURE__*/_jsx(Text, {\n        children: intlUploadText ? /*#__PURE__*/_jsx(FormattedMessage, {\n          id: intlUploadText\n        }) : /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(TextHighlighted, {\n            children: \"Drag/Upload\"\n          }), \" your file here\"]\n        })\n      })]\n    })), thumbs && /*#__PURE__*/_jsx(ThumbsContainer, {\n      children: thumbs\n    })]\n  });\n};\n\nexport default Uploader;","map":null,"metadata":{},"sourceType":"module"}