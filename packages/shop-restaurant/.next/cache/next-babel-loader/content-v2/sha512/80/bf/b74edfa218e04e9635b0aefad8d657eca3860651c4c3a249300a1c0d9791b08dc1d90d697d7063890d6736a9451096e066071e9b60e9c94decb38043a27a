{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/components/spring-modal/spring-modal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport { BaseModal } from 'react-spring-modal';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { Scrollbar } from 'components/scrollbar/scrollbar';\n\nconst SpringModal = ({\n  isOpen,\n  onRequestClose,\n  children,\n  style = {}\n}) => {\n  const transition = useTransition(isOpen, null, {\n    from: {\n      transform: 'translateY(100%) translateY(55px) translateX(-50%)'\n    },\n    enter: {\n      transform: 'translateY(0%) translateY(0) translateX(-50%)'\n    },\n    leave: {\n      transform: 'translateY(100%) translateY(55px) translateX(-50%)'\n    }\n  });\n  const staticStyles = {\n    position: 'absolute',\n    bottom: 0,\n    left: '50%',\n    padding: '0',\n    width: 'calc(100% + 1px)',\n    height: '100%',\n    maxHeight: '70vh',\n    backgroundColor: '#ffffff',\n    borderRadius: '0px',\n    borderTopLeftRadius: '20px',\n    borderTopRightRadius: '20px',\n    zIndex: 99999\n  };\n  const buttonStyle = {\n    width: 40,\n    height: 40,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffff',\n    color: '#0D1136',\n    border: 0,\n    outline: 0,\n    boxShadow: 'none',\n    borderRadius: '50%',\n    position: 'absolute',\n    top: -55,\n    left: '50%',\n    transform: 'translateX(-50%)',\n    cursor: 'pointer',\n    ':focus': {\n      outline: 0,\n      boxShadow: 'none'\n    }\n  };\n  const scrollbarStyle = {\n    height: '100%',\n    maxHeight: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(BaseModal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    children: transition.map(({\n      item,\n      key,\n      props: transitionStyles\n    }) => item && /*#__PURE__*/_jsxDEV(animated.div, {\n      style: _objectSpread(_objectSpread(_objectSpread({}, transitionStyles), staticStyles), style),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onRequestClose,\n        style: _objectSpread({}, buttonStyle),\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          style: {\n            width: 12,\n            height: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n        style: _objectSpread({}, scrollbarStyle),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '30px'\n          },\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SpringModal;","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/components/spring-modal/spring-modal.tsx"],"names":["React","useTransition","animated","BaseModal","CloseIcon","Scrollbar","SpringModal","isOpen","onRequestClose","children","style","transition","from","transform","enter","leave","staticStyles","position","bottom","left","padding","width","height","maxHeight","backgroundColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","zIndex","buttonStyle","display","alignItems","justifyContent","color","border","outline","boxShadow","top","cursor","scrollbarStyle","map","item","key","props","transitionStyles"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AASA,MAAMC,WAAuC,GAAG,CAAC;AAC/CC,EAAAA,MAD+C;AAE/CC,EAAAA,cAF+C;AAG/CC,EAAAA,QAH+C;AAI/CC,EAAAA,KAAK,GAAG;AAJuC,CAAD,KAK1C;AACJ,QAAMC,UAAU,GAAGV,aAAa,CAACM,MAAD,EAAS,IAAT,EAAe;AAC7CK,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADuC;AAE7CC,IAAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAFsC;AAG7CE,IAAAA,KAAK,EAAE;AAAEF,MAAAA,SAAS,EAAE;AAAb;AAHsC,GAAf,CAAhC;AAMA,QAAMG,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,UADS;AAEnBC,IAAAA,MAAM,EAAE,CAFW;AAGnBC,IAAAA,IAAI,EAAE,KAHa;AAInBC,IAAAA,OAAO,EAAE,GAJU;AAKnBC,IAAAA,KAAK,EAAE,kBALY;AAMnBC,IAAAA,MAAM,EAAE,MANW;AAOnBC,IAAAA,SAAS,EAAE,MAPQ;AAQnBC,IAAAA,eAAe,EAAE,SARE;AASnBC,IAAAA,YAAY,EAAE,KATK;AAUnBC,IAAAA,mBAAmB,EAAE,MAVF;AAWnBC,IAAAA,oBAAoB,EAAE,MAXH;AAYnBC,IAAAA,MAAM,EAAE;AAZW,GAArB;AAeA,QAAMC,WAAW,GAAG;AAClBR,IAAAA,KAAK,EAAE,EADW;AAElBC,IAAAA,MAAM,EAAE,EAFU;AAGlBQ,IAAAA,OAAO,EAAE,MAHS;AAIlBC,IAAAA,UAAU,EAAE,QAJM;AAKlBC,IAAAA,cAAc,EAAE,QALE;AAMlBR,IAAAA,eAAe,EAAE,SANC;AAOlBS,IAAAA,KAAK,EAAE,SAPW;AAQlBC,IAAAA,MAAM,EAAE,CARU;AASlBC,IAAAA,OAAO,EAAE,CATS;AAUlBC,IAAAA,SAAS,EAAE,MAVO;AAWlBX,IAAAA,YAAY,EAAE,KAXI;AAYlBR,IAAAA,QAAQ,EAAE,UAZQ;AAalBoB,IAAAA,GAAG,EAAE,CAAC,EAbY;AAclBlB,IAAAA,IAAI,EAAE,KAdY;AAelBN,IAAAA,SAAS,EAAE,kBAfO;AAgBlByB,IAAAA,MAAM,EAAE,SAhBU;AAkBlB,cAAU;AACRH,MAAAA,OAAO,EAAE,CADD;AAERC,MAAAA,SAAS,EAAE;AAFH;AAlBQ,GAApB;AAwBA,QAAMG,cAAc,GAAG;AACrBjB,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,SAAS,EAAE;AAFU,GAAvB;AAKA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEhB,MAAnB;AAA2B,IAAA,cAAc,EAAEC,cAA3C;AAAA,cACGG,UAAU,CAAC6B,GAAX,CACC,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,KAAK,EAAEC;AAApB,KAAD,KACEH,IAAI,iBACF,QAAC,QAAD,CAAU,GAAV;AAEE,MAAA,KAAK,gDAAOG,gBAAP,GAA4B5B,YAA5B,GAA6CN,KAA7C,CAFP;AAAA,8BAIE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEF,cAFX;AAGE,QAAA,KAAK,oBAAOqB,WAAP,CAHP;AAAA,+BAKE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAER,YAAAA,KAAK,EAAE,EAAT;AAAaC,YAAAA,MAAM,EAAE;AAArB;AAAlB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE,QAAC,SAAD;AAAW,QAAA,KAAK,oBAAOiB,cAAP,CAAhB;AAAA,+BACE;AAAK,UAAA,KAAK,EAAE;AAAEnB,YAAAA,OAAO,EAAE;AAAX,WAAZ;AAAA,oBAAkCX;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA,OACOiC,GADP;AAAA;AAAA;AAAA;AAAA,YAHL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAhFD;;AAkFA,eAAepC,WAAf","sourcesContent":["import React from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport { BaseModal } from 'react-spring-modal';\nimport { CloseIcon } from 'assets/icons/CloseIcon';\nimport { Scrollbar } from 'components/scrollbar/scrollbar';\n\ntype SpringModalProps = {\n  isOpen?: boolean;\n  onRequestClose?: () => void;\n  children: React.ReactNode;\n  style?: any;\n};\n\nconst SpringModal: React.FC<SpringModalProps> = ({\n  isOpen,\n  onRequestClose,\n  children,\n  style = {},\n}) => {\n  const transition = useTransition(isOpen, null, {\n    from: { transform: 'translateY(100%) translateY(55px) translateX(-50%)' },\n    enter: { transform: 'translateY(0%) translateY(0) translateX(-50%)' },\n    leave: { transform: 'translateY(100%) translateY(55px) translateX(-50%)' },\n  });\n\n  const staticStyles = {\n    position: 'absolute',\n    bottom: 0,\n    left: '50%',\n    padding: '0',\n    width: 'calc(100% + 1px)',\n    height: '100%',\n    maxHeight: '70vh',\n    backgroundColor: '#ffffff',\n    borderRadius: '0px',\n    borderTopLeftRadius: '20px',\n    borderTopRightRadius: '20px',\n    zIndex: 99999,\n  };\n\n  const buttonStyle = {\n    width: 40,\n    height: 40,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffff',\n    color: '#0D1136',\n    border: 0,\n    outline: 0,\n    boxShadow: 'none',\n    borderRadius: '50%',\n    position: 'absolute' as 'absolute',\n    top: -55,\n    left: '50%',\n    transform: 'translateX(-50%)',\n    cursor: 'pointer',\n\n    ':focus': {\n      outline: 0,\n      boxShadow: 'none',\n    },\n  };\n\n  const scrollbarStyle = {\n    height: '100%',\n    maxHeight: '100%',\n  };\n\n  return (\n    <BaseModal isOpen={isOpen} onRequestClose={onRequestClose}>\n      {transition.map(\n        ({ item, key, props: transitionStyles }) =>\n          item && (\n            <animated.div\n              key={key}\n              style={{ ...transitionStyles, ...staticStyles, ...style }}\n            >\n              <button\n                type=\"button\"\n                onClick={onRequestClose}\n                style={{ ...buttonStyle }}\n              >\n                <CloseIcon style={{ width: 12, height: 12 }} />\n              </button>\n              <Scrollbar style={{ ...scrollbarStyle }}>\n                <div style={{ padding: '30px' }}>{children}</div>\n              </Scrollbar>\n            </animated.div>\n          )\n      )}\n    </BaseModal>\n  );\n};\n\nexport default SpringModal;\n"]},"metadata":{},"sourceType":"module"}