{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/sebastian/space/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/contexts/modal/modal.provider.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport dynamic from 'next/dynamic';\nimport React, { useCallback, useState } from 'react';\nimport { ModalContext } from './modal.context';\nimport { useMedia } from 'utils/use-media';\nvar SpringModal = dynamic(_c = function _c() {\n  return import('components/spring-modal/spring-modal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/spring-modal/spring-modal')];\n    },\n    modules: [\"../contexts/modal/modal.provider.tsx -> \" + 'components/spring-modal/spring-modal']\n  }\n});\n_c2 = SpringModal;\nvar CenterModal = dynamic(_c3 = function _c3() {\n  return import('components/modal/center-modal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/modal/center-modal')];\n    },\n    modules: [\"../contexts/modal/modal.provider.tsx -> \" + 'components/modal/center-modal']\n  }\n});\n/**\n *  Modal de Detalle del Producto\n */\n\n/**\n * Modal Provider Props\n */\n\n_c4 = CenterModal;\n\n/**\n * Modal Provider\n *\n * Provides modal context and renders ModalRoot.\n */\nexport var ModalProvider = function ModalProvider(_ref) {\n  _s();\n\n  var container = _ref.container,\n      rootComponent = _ref.rootComponent,\n      children = _ref.children;\n\n  if (container && !(container instanceof HTMLElement)) {\n    throw new Error(\"Container must specify DOM element to mount modal root into.\\n    This behavior has changed in 3.0.0. Please use `rootComponent` prop instead.\\n    See: https://github.com/mpontus/react-modal-hook/issues/18\");\n  }\n\n  var _useState = useState({}),\n      modals = _useState[0],\n      setModals = _useState[1];\n\n  var showModal = function showModal(key, modal) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return setModals(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, key, _objectSpread({\n        component: modal,\n        isOpen: true\n      }, options)));\n    });\n  };\n\n  var hideModal = useCallback(function (key, onClose) {\n    setModals(function (prevConfig) {\n      return _objectSpread(_objectSpread({}, prevConfig), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, prevConfig[key]), {}, {\n        isOpen: false\n      })));\n    });\n\n    if (onClose) {\n      onClose();\n    }\n  }, []);\n  var contextValue = {\n    showModal: showModal,\n    hideModal: hideModal\n  };\n  var isSmall = useMedia('(max-width: 767px)');\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [children, Object.keys(modals).map(function (currentKey) {\n        console.log(currentKey, modals[currentKey]);\n        var _modals$currentKey = modals[currentKey],\n            Component = _modals$currentKey.component,\n            isOpen = _modals$currentKey.isOpen,\n            onClose = _modals$currentKey.onClose;\n        return isSmall ? /*#__PURE__*/_jsxDEV(SpringModal, {\n          children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, _this),\n          isOpen: isOpen,\n          onRequestClose: function onRequestClose() {\n            return hideModal(currentKey, onClose);\n          }\n        }, currentKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(CenterModal, {\n          children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, _this),\n          isOpen: isOpen,\n          onRequestClose: function onRequestClose() {\n            return hideModal(currentKey, onClose);\n          }\n        }, currentKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ModalProvider, \"U2OcOuHrdTn7Y2728hSu9lQK5Pw=\", false, function () {\n  return [useMedia];\n});\n\n_c5 = ModalProvider;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SpringModal$dynamic\");\n$RefreshReg$(_c2, \"SpringModal\");\n$RefreshReg$(_c3, \"CenterModal$dynamic\");\n$RefreshReg$(_c4, \"CenterModal\");\n$RefreshReg$(_c5, \"ModalProvider\");","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/contexts/modal/modal.provider.tsx"],"names":["dynamic","React","useCallback","useState","ModalContext","useMedia","SpringModal","CenterModal","ModalProvider","container","rootComponent","children","HTMLElement","Error","modals","setModals","showModal","key","modal","options","prev","component","isOpen","hideModal","onClose","prevConfig","contextValue","isSmall","Object","keys","map","currentKey","console","log","Component"],"mappings":"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","sourcesContent":["import dynamic from 'next/dynamic';\nimport React, { useCallback, useState, useMemo } from 'react';\nimport { ModalType, ModalContext } from './modal.context';\nimport { useMedia } from 'utils/use-media';\nconst SpringModal = dynamic(() =>\n  import('components/spring-modal/spring-modal')\n);\nconst CenterModal = dynamic(() => import('components/modal/center-modal'));\n\n/**\n *  Modal de Detalle del Producto\n */\n\n\n/**\n * Modal Provider Props\n */\nexport interface ModalProviderProps {\n  /**\n   * Specifies the root element to render modals into\n   */\n  container?: Element;\n\n  /**\n   * Container component for modal nodes\n   */\n  rootComponent?: React.ComponentType<any>;\n\n  /**\n   * Subtree that will receive modal context\n   */\n  children: React.ReactNode;\n}\n\n/**\n * Modal Provider\n *\n * Provides modal context and renders ModalRoot.\n */\nexport const ModalProvider = ({\n  container,\n  rootComponent,\n  children,\n}: ModalProviderProps) => {\n  if (container && !(container instanceof HTMLElement)) {\n    throw new Error(`Container must specify DOM element to mount modal root into.\n    This behavior has changed in 3.0.0. Please use \\`rootComponent\\` prop instead.\n    See: https://github.com/mpontus/react-modal-hook/issues/18`);\n  }\n  const [modals, setModals] = useState<Record<string, any>>({});\n  const showModal = (key: string, modal: ModalType, options: any = {}) =>\n    setModals((prev) => ({\n      ...prev,\n      [key]: { component: modal, isOpen: true, ...options },\n    }));\n  const hideModal = useCallback((key: string, onClose: () => void) => {\n    setModals((prevConfig) => ({\n      ...prevConfig,\n      [key]: { ...prevConfig[key], isOpen: false },\n    }));\n    if (onClose) {\n      onClose();\n    }\n  }, []);\n  const contextValue: any = { showModal, hideModal };\n  const isSmall = useMedia('(max-width: 767px)');\n  return (\n    <ModalContext.Provider value={contextValue}>\n      <React.Fragment>\n        {children}\n        {Object.keys(modals).map((currentKey) => {\n          console.log(currentKey, modals[currentKey]);\n          const { component: Component, isOpen, onClose } = modals[currentKey];\n          return isSmall ? (\n            <SpringModal\n              key={currentKey}\n              children={<Component />}\n              isOpen={isOpen}\n              onRequestClose={() => hideModal(currentKey, onClose)}\n            />\n          ) : (\n            <CenterModal\n              key={currentKey}\n              children={<Component />}\n              isOpen={isOpen}\n              onRequestClose={() => hideModal(currentKey, onClose)}\n            />\n          );\n        })}\n      </React.Fragment>\n    </ModalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}