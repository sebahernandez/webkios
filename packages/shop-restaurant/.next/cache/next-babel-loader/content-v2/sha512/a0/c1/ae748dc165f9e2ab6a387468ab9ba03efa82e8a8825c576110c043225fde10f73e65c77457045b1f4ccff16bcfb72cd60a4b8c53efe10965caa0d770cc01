{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sebastian/space/web/packages/shop-restaurant/src/features/carts/cart-popup.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport CartPopupButton, { BoxedCartButton } from 'components/cart-popup/cart-popup-button';\nimport { CURRENCY } from 'utils/constant';\nimport { CartSlidePopup } from './cart.style';\nimport { FormattedMessage } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\nvar CartPopupStyle = createGlobalStyle([\".cartPopup{top:auto !important;left:auto !important;bottom:50px !important;right:50px !important;box-shadow:\", \";transform-origin:bottom right;@media (max-width:580px){max-width:none!important;width:100% !important;bottom:0 !important;left:0!important;background:\", \";overflow:initial !important;transform-origin:bottom center;}}\"], themeGet('shadows.big', '0 21px 36px rgba(0, 0, 0, 0.16)'), themeGet('colors.white', '#ffffff'));\n_c = CartPopupStyle;\n\nvar CartPopUp = function CartPopUp(_ref) {\n  _s();\n\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop;\n\n  var _useCart = useCart(),\n      isOpen = _useCart.isOpen,\n      cartItemsCount = _useCart.cartItemsCount,\n      toggleCart = _useCart.toggleCart,\n      calculatePrice = _useCart.calculatePrice;\n\n  var handleModal = function handleModal() {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: function closeComponent() {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, _this);\n      },\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 330\n      }\n    });\n  };\n\n  var cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: mobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartPopupStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(CartPopupButton, {\n        className: \"product-cart\",\n        itemCount: cartItemsCount,\n        itemPostfix: cartItemsCount > 1 ? /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"cartItems\",\n          defaultMessage: \"items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, _this) : /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"cartItem\",\n          defaultMessage: \"item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, _this),\n        price: calculatePrice(),\n        pricePrefix: \"$\",\n        onClick: handleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartSlidePopup, {\n        className: cartSliderClass,\n        children: isOpen && /*#__PURE__*/_jsxDEV(Cart, {\n          onCloseBtnClick: toggleCart,\n          scrollbarHeight: \"100vh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(BoxedCartButton, {\n        className: \"product-cart\",\n        itemCount: cartItemsCount,\n        itemPostfix: cartItemsCount > 1 ? /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"cartItems\",\n          defaultMessage: \"items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, _this) : /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"cartItem\",\n          defaultMessage: \"item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, _this),\n        price: calculatePrice(),\n        pricePrefix: CURRENCY,\n        onClick: toggleCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(CartPopUp, \"9OfCyKMkiX8EZB7rii64tphcWd8=\", false, function () {\n  return [useCart];\n});\n\n_c2 = CartPopUp;\nexport default CartPopUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartPopupStyle\");\n$RefreshReg$(_c2, \"CartPopUp\");","map":{"version":3,"sources":["/Users/sebastian/space/web/packages/shop-restaurant/src/features/carts/cart-popup.tsx"],"names":["React","createGlobalStyle","themeGet","openModal","closeModal","Cart","CartPopupButton","BoxedCartButton","CURRENCY","CartSlidePopup","FormattedMessage","useCart","CartPopupStyle","CartPopUp","deviceType","mobile","tablet","desktop","isOpen","cartItemsCount","toggleCart","calculatePrice","handleModal","show","config","className","width","height","enableResizing","disableDragging","transition","tension","friction","closeOnClickOutside","component","closeComponent","componentProps","onCloseBtnClick","scrollbarHeight","cartSliderClass"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport CartPopupButton, {\n  BoxedCartButton,\n} from 'components/cart-popup/cart-popup-button';\nimport { CURRENCY } from 'utils/constant';\nimport { CartSlidePopup } from './cart.style';\nimport { FormattedMessage } from 'react-intl';\nimport { useCart } from 'contexts/cart/use-cart';\n\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup{\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: ${themeGet('shadows.big', '0 21px 36px rgba(0, 0, 0, 0.16)')};\n    transform-origin: bottom right;\n\n    @media (max-width: 580px) {\n      max-width: none!important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0!important;\n      background: ${themeGet('colors.white', '#ffffff')};\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n`;\n\ntype CartProps = {\n  deviceType: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst CartPopUp: React.FC<CartProps> = ({\n  deviceType: { mobile, tablet, desktop },\n}) => {\n  const { isOpen, cartItemsCount, toggleCart, calculatePrice } = useCart();\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40,\n        },\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: () => <div />,\n      componentProps: { onCloseBtnClick: closeModal, scrollbarHeight: 330 },\n    });\n  };\n\n  let cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n\n  return (\n    <>\n      {mobile ? (\n        <>\n          <CartPopupStyle />\n          <CartPopupButton\n            className='product-cart'\n            itemCount={cartItemsCount}\n            itemPostfix={\n              cartItemsCount > 1 ? (\n                <FormattedMessage id='cartItems' defaultMessage='items' />\n              ) : (\n                <FormattedMessage id='cartItem' defaultMessage='item' />\n              )\n            }\n            price={calculatePrice()}\n            pricePrefix='$'\n            onClick={handleModal}\n          />\n        </>\n      ) : (\n        <>\n          <CartSlidePopup className={cartSliderClass}>\n            {isOpen && (\n              <Cart onCloseBtnClick={toggleCart} scrollbarHeight='100vh' />\n            )}\n          </CartSlidePopup>\n\n          <BoxedCartButton\n            className='product-cart'\n            itemCount={cartItemsCount}\n            itemPostfix={\n              cartItemsCount > 1 ? (\n                <FormattedMessage id='cartItems' defaultMessage='items' />\n              ) : (\n                <FormattedMessage id='cartItem' defaultMessage='item' />\n              )\n            }\n            price={calculatePrice()}\n            pricePrefix={CURRENCY}\n            onClick={toggleCart}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CartPopUp;\n"]},"metadata":{},"sourceType":"module"}