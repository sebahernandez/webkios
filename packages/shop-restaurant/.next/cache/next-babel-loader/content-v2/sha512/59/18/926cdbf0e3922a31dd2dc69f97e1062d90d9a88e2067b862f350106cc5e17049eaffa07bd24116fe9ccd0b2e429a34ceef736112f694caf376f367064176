{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/features/user-profile/order/order.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Scrollbar } from 'components/scrollbar/scrollbar';\nimport { gql } from '@apollo/client';\nimport { DesktopView, MobileView, OrderBox, OrderListWrapper, OrderList, OrderDetailsWrapper, Title, ImageWrapper, ItemWrapper, ItemDetails, ItemName, ItemSize, ItemPrice, NoOrderFound } from './order.style';\nimport OrderDetails from './order-details/order-details';\nimport OrderCard from './order-card/order-card';\nimport OrderCardMobile from './order-card/order-card-mobile';\nimport useComponentSize from 'utils/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\nconst progressData = ['Órden Recibida', 'Órden en Camino', 'Órder Entregada'];\nconst GET_ORDERS = gql`\n  query getAllOrders($text: String, $user: Int!, $limit: Int) {\n    orders(text: $text, limit: $limit, user: $user) {\n      id\n      status\n      deliveryAddress\n      amount\n      date\n      subtotal\n      deliveryFee\n      discount\n      deliveryTime\n      products {\n        title\n        price\n        total\n        image\n        weight\n        quantity\n        id\n      }\n    }\n  }\n`;\nconst orderTableColumns = [{\n  title: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n    id: \"cartItems\",\n    defaultMessage: \"Items\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this),\n  dataIndex: '',\n  key: 'items',\n  width: 250,\n  ellipsis: true,\n  render: (text, record) => {\n    return /*#__PURE__*/_jsxDEV(ItemWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ImageWrapper, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: record.image,\n          alt: record.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ItemDetails, {\n        children: [/*#__PURE__*/_jsxDEV(ItemName, {\n          children: record.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ItemSize, {\n          children: record.weight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ItemPrice, {\n          children: [\"$\", record.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }\n}, {\n  title: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n    id: \"intlTableColTitle2\",\n    defaultMessage: \"Quantity\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this),\n  dataIndex: 'quantity',\n  key: 'quantity',\n  align: 'center',\n  width: 100\n}, {\n  title: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n    id: \"intlTableColTitle3\",\n    defaultMessage: \"Price\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 12\n  }, this),\n  dataIndex: '',\n  key: 'price',\n  align: 'right',\n  width: 100,\n  render: (text, record) => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"$\", record.total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 14\n    }, this);\n  }\n}];\nconst data1 = {\n  orders: [{\n    id: '1',\n    status: '2',\n    deliveryAddress: 'delivery',\n    amount: 'delivery',\n    date: 'delivery',\n    subtotal: 'delivery',\n    deliveryFee: 'delivery',\n    discount: 'delivery',\n    deliveryTime: 'delivery',\n    products: [{\n      title: 'titulo1',\n      price: 1010,\n      total: 2020,\n      image: 'img1',\n      weight: 2000,\n      quantity: 10,\n      id: '10'\n    }]\n  }]\n};\n\nconst OrdersContent = () => {\n  const {\n    0: order,\n    1: setOrder\n  } = useState(null);\n  const {\n    0: active,\n    1: setActive\n  } = useState('');\n  const [targetRef, size] = useComponentSize();\n  const orderListHeight = size.height - 79;\n  /*   const { data, error, loading } = useQuery(GET_ORDERS, {\n      variables: {\n        limit: 7,\n        user: 1,\n      },\n    }); */\n\n  useEffect(() => {\n    if (data1 && data1.orders && data1.orders.length !== 0) {\n      setOrder(data1.orders[0]);\n      setActive(data1.orders[0].id);\n    }\n  }, [data1 && data1.orders]);\n  /*   if (loading) {\n      return <div>loading...</div>;\n    }\n   \n    if (error) return <div>{error.message}</div>; */\n\n  const handleClick = order => {\n    setOrder(order);\n    setActive(order.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(OrderBox, {\n    children: [/*#__PURE__*/_jsxDEV(DesktopView, {\n      children: [/*#__PURE__*/_jsxDEV(OrderListWrapper, {\n        style: {\n          height: size.height\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          style: {\n            padding: '0 20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"intlOrderPageTitle\",\n            defaultMessage: \"Mi Pedido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          className: \"order-scrollbar\",\n          children: /*#__PURE__*/_jsxDEV(OrderList, {\n            children: data1.orders.length !== 0 ? data1.orders.map(current => /*#__PURE__*/_jsxDEV(OrderCard, {\n              orderId: current.id,\n              className: current.id === active ? 'active' : '',\n              status: progressData[current.status - 1],\n              date: current.date,\n              deliveryTime: current.deliveryTime,\n              amount: current.amount,\n              onClick: () => {\n                handleClick(current);\n              }\n            }, current.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(NoOrderFound, {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"intlNoOrderFound\",\n                defaultMessage: \"\\xD3rden no Encontrada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrderDetailsWrapper, {\n        ref: targetRef,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          style: {\n            padding: '0 20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"orderDetailsText\",\n            defaultMessage: \"Detalle de la \\xD3rden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), order && order.id && /*#__PURE__*/_jsxDEV(OrderDetails, {\n          progressStatus: order.status,\n          progressData: progressData,\n          address: order.deliveryAddress,\n          subtotal: order.subtotal,\n          discount: order.discount,\n          deliveryFee: order.deliveryFee,\n          grandTotal: order.amount,\n          tableData: order.products,\n          columns: orderTableColumns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileView, {\n      children: /*#__PURE__*/_jsxDEV(OrderList, {\n        children: /*#__PURE__*/_jsxDEV(OrderCardMobile, {\n          orders: data1.orders,\n          className: order && order.id === active ? 'active' : '',\n          progressData: progressData,\n          columns: orderTableColumns,\n          onClick: () => {\n            handleClick(order);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n\nexport default OrdersContent;","map":{"version":3,"sources":["/Users/alejandrosandoval/space/world_eserp/web/packages/shop-restaurant/src/features/user-profile/order/order.tsx"],"names":["React","useState","useEffect","Scrollbar","gql","DesktopView","MobileView","OrderBox","OrderListWrapper","OrderList","OrderDetailsWrapper","Title","ImageWrapper","ItemWrapper","ItemDetails","ItemName","ItemSize","ItemPrice","NoOrderFound","OrderDetails","OrderCard","OrderCardMobile","useComponentSize","FormattedMessage","progressData","GET_ORDERS","orderTableColumns","title","dataIndex","key","width","ellipsis","render","text","record","image","weight","price","align","total","data1","orders","id","status","deliveryAddress","amount","date","subtotal","deliveryFee","discount","deliveryTime","products","quantity","OrdersContent","order","setOrder","active","setActive","targetRef","size","orderListHeight","height","length","handleClick","padding","map","current"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Scrollbar } from 'components/scrollbar/scrollbar';\nimport { useQuery, gql } from '@apollo/client';\nimport {\n  DesktopView,\n  MobileView,\n  OrderBox,\n  OrderListWrapper,\n  OrderList,\n  OrderDetailsWrapper,\n  Title,\n  ImageWrapper,\n  ItemWrapper,\n  ItemDetails,\n  ItemName,\n  ItemSize,\n  ItemPrice,\n  NoOrderFound,\n} from './order.style';\n\nimport OrderDetails from './order-details/order-details';\nimport OrderCard from './order-card/order-card';\nimport OrderCardMobile from './order-card/order-card-mobile';\nimport useComponentSize from 'utils/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\n\nconst progressData = ['Órden Recibida', 'Órden en Camino', 'Órder Entregada'];\n\nconst GET_ORDERS = gql`\n  query getAllOrders($text: String, $user: Int!, $limit: Int) {\n    orders(text: $text, limit: $limit, user: $user) {\n      id\n      status\n      deliveryAddress\n      amount\n      date\n      subtotal\n      deliveryFee\n      discount\n      deliveryTime\n      products {\n        title\n        price\n        total\n        image\n        weight\n        quantity\n        id\n      }\n    }\n  }\n`;\n\nconst orderTableColumns = [\n  {\n    title: <FormattedMessage id='cartItems' defaultMessage='Items' />,\n    dataIndex: '',\n    key: 'items',\n    width: 250,\n    ellipsis: true,\n    render: (text, record) => {\n      return (\n        <ItemWrapper>\n          <ImageWrapper>\n            <img src={record.image} alt={record.title} />\n          </ImageWrapper>\n\n          <ItemDetails>\n            <ItemName>{record.title}</ItemName>\n            <ItemSize>{record.weight}</ItemSize>\n            <ItemPrice>${record.price}</ItemPrice>\n          </ItemDetails>\n        </ItemWrapper>\n      );\n    },\n  },\n  {\n    title: (\n      <FormattedMessage id='intlTableColTitle2' defaultMessage='Quantity' />\n    ),\n    dataIndex: 'quantity',\n    key: 'quantity',\n    align: 'center',\n    width: 100,\n  },\n  {\n    title: <FormattedMessage id='intlTableColTitle3' defaultMessage='Price' />,\n    dataIndex: '',\n    key: 'price',\n    align: 'right',\n    width: 100,\n    render: (text, record) => {\n      return <p>${record.total}</p>;\n    },\n  },\n];\n\nconst data1 = {\n  orders: [{\n  id: '1',\n  status: '2',\n  deliveryAddress: 'delivery',\n  amount: 'delivery',\n  date: 'delivery',\n  subtotal: 'delivery',\n  deliveryFee: 'delivery',\n  discount: 'delivery',\n  deliveryTime: 'delivery',\n  products: [{\n    title: 'titulo1',\n    price: 1010,\n    total: 2020,\n    image: 'img1',\n    weight: 2000,\n    quantity: 10,\n    id: '10',\n  }]\n }]};\n\n\nconst OrdersContent: React.FC<{}> = () => {\n  const [order, setOrder] = useState(null);\n  const [active, setActive] = useState('');\n\n  const [targetRef, size] = useComponentSize();\n  const orderListHeight = size.height - 79;\n/*   const { data, error, loading } = useQuery(GET_ORDERS, {\n    variables: {\n      limit: 7,\n      user: 1,\n    },\n  }); */\n\n   useEffect(() => {\n    if (data1 && data1.orders && data1.orders.length !== 0) {\n      setOrder(data1.orders[0]);\n      setActive(data1.orders[0].id);\n    }\n  }, [data1 && data1.orders]);\n\n/*   if (loading) {\n    return <div>loading...</div>;\n  }\n \n  if (error) return <div>{error.message}</div>; */\n\n  const handleClick = (order: any) => {\n    setOrder(order);\n    setActive(order.id);\n  };\n\n  return (\n    <OrderBox>\n      <DesktopView>\n        <OrderListWrapper style={{ height: size.height }}>\n          <Title style={{ padding: '0 20px' }}>\n            <FormattedMessage\n              id='intlOrderPageTitle'\n              defaultMessage='Mi Pedido'\n            />\n          </Title>\n          <Scrollbar className='order-scrollbar'>\n            <OrderList>\n              {data1.orders.length !== 0 ? (\n                data1.orders.map((current: any) => (\n                  <OrderCard\n                    key={current.id}\n                    orderId={current.id}\n                    className={current.id === active ? 'active' : ''}\n                    status={progressData[current.status - 1]}\n                    date={current.date}\n                    deliveryTime={current.deliveryTime}\n                    amount={current.amount}\n                    onClick={() => {\n                      handleClick(current);\n                    }}\n                  />\n                ))\n              ) : (\n                <NoOrderFound>\n                  <FormattedMessage\n                    id='intlNoOrderFound'\n                    defaultMessage='Órden no Encontrada'\n                  />\n                </NoOrderFound>\n              )}\n            </OrderList>\n          </Scrollbar>\n        </OrderListWrapper>\n\n        <OrderDetailsWrapper ref={targetRef}>\n          <Title style={{ padding: '0 20px' }}>\n            <FormattedMessage\n              id='orderDetailsText'\n              defaultMessage='Detalle de la Órden'\n            />\n          </Title>\n          {order && order.id && (\n            <OrderDetails\n              progressStatus={order.status}\n              progressData={progressData}\n              address={order.deliveryAddress}\n              subtotal={order.subtotal}\n              discount={order.discount}\n              deliveryFee={order.deliveryFee}\n              grandTotal={order.amount}\n              tableData={order.products}\n              columns={orderTableColumns}\n            />\n          )}\n        </OrderDetailsWrapper>\n      </DesktopView>\n\n      <MobileView>\n        <OrderList>\n          <OrderCardMobile\n            orders={data1.orders}\n            className={order && order.id === active ? 'active' : ''}\n            progressData={progressData}\n            columns={orderTableColumns}\n            onClick={() => {\n              handleClick(order);\n            }}\n          />\n        </OrderList>\n      </MobileView>\n    </OrderBox>\n  );\n};\n\nexport default OrdersContent;\n"]},"metadata":{},"sourceType":"module"}